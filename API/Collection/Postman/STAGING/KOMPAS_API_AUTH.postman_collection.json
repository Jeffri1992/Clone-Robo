{
	"info": {
		"_postman_id": "f1ca1d76-546f-4ecb-be1f-8d369bc4336b",
		"name": "KOMPAS_API_AUTH",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DataFactory",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function makeid(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}\r",
									"\r",
									"generated_email = makeid(5);\r",
									"generated_name = makeid(7);\r",
									"generated_pass =  \"@@AsD1223!!\" + makeid(9);\r",
									"generated_lastname = makeid(8);\r",
									"pm.globals.set(\"GLOBAL_BASEURL\", \"https://go-oauth2-dev-jp2wsmfbfq-uc.a.run.app/api/v1\");\r",
									"pm.globals.set(\"GLOBAL_EMAIL\", \"testsdet.\"+ generated_email+\"@1secmail.com\");\r",
									"pm.globals.set(\"GLOBAL_PASSWORD\",generated_pass);\r",
									"pm.environment.set(\"firstname\", \"sdet name \"+ generated_name);\r",
									"pm.environment.set(\"lastname\",generated_lastname);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Set global email, pass, accessToken\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.globals.set(\"GLOBAL_EMAIL\",jsonData.data.data.email)\r",
									"    pm.globals.set(\"GLOBAL_PASSWORD\",jsonData.data.data.password)\r",
									"    pm.globals.set(\"GLOBAL_ACCESSTOKEN\",jsonData.data.accessToken)\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{GLOBAL_EMAIL}}\",\n    \"firstname\": \"{{firstname}}\",\n    \"password\": \"{{GLOBAL_PASSWORD}}\",\n    \"apple\": {\n        \"email\": \"\",\n        \"token\": \"\"\n    },\n    \"facebook\": \"\",\n    \"google\": \"\",\n    \"lastName\": \"{{lastname}}\"\n}"
						},
						"url": {
							"raw": "{{GLOBAL_BASEURL}}/register",
							"host": [
								"{{GLOBAL_BASEURL}}"
							],
							"path": [
								"register"
							]
						},
						"description": "Register User Using Email"
					},
					"response": [
						{
							"name": "1. Register",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"\",\n        \"token\": \"\"\n    },\n    \"facebook\": \"\",\n    \"google\": \"\",\n    \"lastName\": \"{{lastname}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"register"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-credentials",
									"value": "true"
								},
								{
									"key": "access-control-allow-headers",
									"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
								},
								{
									"key": "access-control-allow-methods",
									"value": "GET,POST"
								},
								{
									"key": "access-control-allow-origin",
									"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "set-cookie",
									"value": "kantormu=%7B%22user%22%3A%7B%22created_at%22%3A%22%22%2C%22first_name%22%3A%22sdet+name+gLkonuw%22%2C%22guid%22%3A%225f3390af-172e-4572-8329-ae588b64f046%22%2C%22id%22%3A%22dUFFdlNVbWN6bnhURnBwYTMzMzIzMjM5NjYzMTMyMzEzNjMxMzE2MjMxNjMzNjMzZjIxY2QzNmQ2NzE0ZjcwYzczZjc1NmVjM2NlYTIxYzBlZjQzMzQ2MmY1M2VmOWMxNjYyNTk4NjAwN2U0M2JkMDYzMzU2MTMxMzQzNzMyMzQ2NTM3NjUzMDM2MzAzNDMwZjc5YjMwMTQwYWU1NmFiMTliZTJmNTkxNzUxY2Y1YTJhZWI2MzMyNDhiYzJjYmJlYTY2NWY4Mjg0MGU0OTQ4NQ%3D%3D%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22%22%7D%2C%22version%22%3A%221.1.0%22%7D; Path=/; Domain=kompas.cloud; Max-Age=21600"
								},
								{
									"key": "set-cookie",
									"value": "kompas._token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuQ0xldFlAMXNlY21haWwuY29tIiwiaWQiOiI1ZjMzOTBhZi0xNzJlLTQ1NzItODMyOS1hZTU4OGI2NGYwNDYiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzgzMTI3MSwiaWF0IjoxNjIzODMwMzcxLCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.T9wynJBKDhPpolYwxTw4ranuHGwSj4RVZOEngHAC-bswUb4exXItipb1-F81KHLA0WFibtGNa0C-InTBMpl_JZXNb9mUvSnD4VU65t9g-0-5nD9bPva7k6J0Dg9RpLSfuu4zMSUykts-6gTQGFCt6OAl0fVLu6bbFT5uJ_lu5o4CBrM; Path=/; Domain=kompas.cloud; Max-Age=900"
								},
								{
									"key": "set-cookie",
									"value": "kompas._token_refresh=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkNMZXRZQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzkxNjc3MSwic3ViIjoxfQ.IJhjSVfnYjJbIDVxRoTMIcSFta_FRSiJTZ0YZxJjOSlyRojDoLNh8p4noPECNPI9O51IcYPpIf9KkwcIDh9rN5UV63Qq082r7LrgxMlRjWzXc3Y4vJPRhtujP568j_zV7SF5pMpH9XeOZweyJjp0nbXcslIGycDd8PRHnysKxy9OMok; Path=/; Domain=kompas.cloud; Max-Age=21600"
								},
								{
									"key": "X-Cloud-Trace-Context",
									"value": "16812f2da853d779ffb5c06f498dfde5;o=1"
								},
								{
									"key": "Date",
									"value": "Wed, 16 Jun 2021 07:59:32 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Content-Length",
									"value": "1132"
								},
								{
									"key": "Expires",
									"value": "Wed, 16 Jun 2021 07:59:32 GMT"
								},
								{
									"key": "Cache-Control",
									"value": "private"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
								}
							],
							"cookie": [],
							"body": "{\n    \"accessToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuQ0xldFlAMXNlY21haWwuY29tIiwiaWQiOiI1ZjMzOTBhZi0xNzJlLTQ1NzItODMyOS1hZTU4OGI2NGYwNDYiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzgzMTI3MSwiaWF0IjoxNjIzODMwMzcxLCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.T9wynJBKDhPpolYwxTw4ranuHGwSj4RVZOEngHAC-bswUb4exXItipb1-F81KHLA0WFibtGNa0C-InTBMpl_JZXNb9mUvSnD4VU65t9g-0-5nD9bPva7k6J0Dg9RpLSfuu4zMSUykts-6gTQGFCt6OAl0fVLu6bbFT5uJ_lu5o4CBrM\",\n    \"data\": {\n        \"email\": \"testsdet.CLetY@1secmail.com\",\n        \"name\": \"sdet name gLkonuw\",\n        \"lastName\": \"KFfHiLZw\",\n        \"password\": \"@@AsD1223!!PgpqFIamY\",\n        \"google\": \"\",\n        \"facebook\": \"\",\n        \"apple\": {\n            \"email\": \"\",\n            \"token\": \"\"\n        },\n        \"docReferrer\": \"\"\n    },\n    \"docReferrer\": \"\",\n    \"error\": false,\n    \"message\": \"Pengguna telah berhasil didaftarkan.\",\n    \"passwordCheck\": \"Password kuat\",\n    \"refreshToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkNMZXRZQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzkxNjc3MSwic3ViIjoxfQ.IJhjSVfnYjJbIDVxRoTMIcSFta_FRSiJTZ0YZxJjOSlyRojDoLNh8p4noPECNPI9O51IcYPpIf9KkwcIDh9rN5UV63Qq082r7LrgxMlRjWzXc3Y4vJPRhtujP568j_zV7SF5pMpH9XeOZweyJjp0nbXcslIGycDd8PRHnysKxy9OMok\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Testcases",
			"item": [
				{
					"name": "Login New",
					"item": [
						{
							"name": "Login with registered email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User Successfully Login With Registered Email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    email = pm.globals.get(\"GLOBAL_EMAIL\");\r",
											"    pm.response.to.have.status(200\r",
											"    );\r",
											"    pm.expect(jsonData.success).to.be.true;\r",
											"    pm.expect(jsonData.message).to.eql(\"Login berhasil!\");\r",
											"    pm.expect(jsonData.data.userData.email).to.eql(email);\r",
											"\r",
											"    var total = Object.keys(jsonData.data.userData).length\r",
											"    pm.expect(total).greaterThan(0);\r",
											"    \r",
											"    //set accessToken and Refresh token to env\r",
											"    pm.environment.set(\"accessToken\", jsonData.data.accessToken);\r",
											"    pm.environment.set(\"refreshToken\", jsonData.data.refreshToken);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{GLOBAL_EMAIL}}\",\r\n    \"password\": \"{{GLOBAL_PASSWORD}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/login",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": [
								{
									"name": "2. Login",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "set-cookie",
											"value": "kantormu=%7B%22user%22%3A%7B%22created_at%22%3A%22%22%2C%22first_name%22%3A%22sdet+name+gLkonuw%22%2C%22guid%22%3A%225f3390af-172e-4572-8329-ae588b64f046%22%2C%22id%22%3A%22aUZteE1RS2hnQUlVUWNYSjMzMzIzMjM5NjYzMTMyMzEzNjMxMzE2MjMxNjMzNjMzOTc0ZDI5NGVjNjYwZTU5ZjQwNmI4YWFhZGE1YWZhMDhiNzY1MGYxNDhkYzM3ZTMxOTU0MjJkZWNjMjg0OGVmNzYzMzU2MTMxMzQzNzMyMzQ2NTM3NjUzMDM2MzAzNDMwZDQzNGJlNDY2ODkwMTJhZmVjNzI1NjkxNzY1Yjc2OTU5YzhlMjM1MjFlM2FlYWI0MTRmZGUwYWM0NjU3NmM5OQ%3D%3D%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22%22%7D%2C%22version%22%3A%221.1.0%22%7D; Path=/; Domain=kompas.cloud; Max-Age=21600"
										},
										{
											"key": "set-cookie",
											"value": "kompas._token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuQ0xldFlAMXNlY21haWwuY29tIiwiaWQiOiI1ZjMzOTBhZi0xNzJlLTQ1NzItODMyOS1hZTU4OGI2NGYwNDYiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzgzMTMwMSwiaWF0IjoxNjIzODMwNDAxLCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.X7WPLy1seIs_e-6INEBDZA_BFZcQRbGuHsSgrctCUp3FgFc-9NXvBjVFHR5L8Cp5oG3nI_y-YriA_5IEk15hRhB_nSEB0y9B76D1MvZ8sWL1hRwtzPSm5YdnfmbypJ0tnuRl0AFJRrLPfd7Z7JYNQNV-ny12rwJwQWSkXYujELep3FU; Path=/; Domain=kompas.cloud; Max-Age=900"
										},
										{
											"key": "set-cookie",
											"value": "kompas._token_refresh=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkNMZXRZQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzkxNjgwMSwic3ViIjoxfQ.edLFabeDw2OJPJpMWTjcygN7Gc5GrsPtkMHjyHdzavvsOCRBkyIOq_S04bwagOuYKf3q6Y1Z4Kq4TX6E6KbN_fOg_rUYbt8Y1lQVvvQ7j2NGSHQX0NpZeDzZGPxHk0vQHAdjagZMTia6u86SEKgw_11xR_VoEP-mSeXErSKgSIFBu1k; Path=/; Domain=kompas.cloud; Max-Age=21600"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "108f982a1f134d0933632bd4036a5aaa;o=1"
										},
										{
											"key": "Date",
											"value": "Wed, 16 Jun 2021 08:00:02 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "1185"
										},
										{
											"key": "Expires",
											"value": "Wed, 16 Jun 2021 08:00:02 GMT"
										},
										{
											"key": "Cache-Control",
											"value": "private"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"code\": 200,\n    \"message\": \"login sukses\",\n    \"data\": {\n        \"user_id\": \"qFmRoXClHSOOIULy0fIq\",\n        \"nama\": \"sdet name gLkonuw\",\n        \"email\": \"testsdet.CLetY@1secmail.com\",\n        \"password\": \"$P$BSSr8FJrAd1KhF7wAb.99BB2PbvsDS/\",\n        \"userGuid\": \"5f3390af-172e-4572-8329-ae588b64f046\",\n        \"isActive\": false,\n        \"Authentication\": {\n            \"apple\": {\n                \"email\": \"\",\n                \"token\": \"\"\n            },\n            \"facebook\": {\n                \"email\": \"\"\n            },\n            \"google\": {\n                \"email\": \"\"\n            }\n        }\n    },\n    \"accessToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuQ0xldFlAMXNlY21haWwuY29tIiwiaWQiOiI1ZjMzOTBhZi0xNzJlLTQ1NzItODMyOS1hZTU4OGI2NGYwNDYiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzgzMTMwMSwiaWF0IjoxNjIzODMwNDAxLCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.X7WPLy1seIs_e-6INEBDZA_BFZcQRbGuHsSgrctCUp3FgFc-9NXvBjVFHR5L8Cp5oG3nI_y-YriA_5IEk15hRhB_nSEB0y9B76D1MvZ8sWL1hRwtzPSm5YdnfmbypJ0tnuRl0AFJRrLPfd7Z7JYNQNV-ny12rwJwQWSkXYujELep3FU\",\n    \"refreshToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkNMZXRZQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzkxNjgwMSwic3ViIjoxfQ.edLFabeDw2OJPJpMWTjcygN7Gc5GrsPtkMHjyHdzavvsOCRBkyIOq_S04bwagOuYKf3q6Y1Z4Kq4TX6E6KbN_fOg_rUYbt8Y1lQVvvQ7j2NGSHQX0NpZeDzZGPxHk0vQHAdjagZMTia6u86SEKgw_11xR_VoEP-mSeXErSKgSIFBu1k\"\n}"
								}
							]
						},
						{
							"name": "Login with empty email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User Get Error Login With Empty Email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.message).to.eql(\"Email wajib diisi. \");\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.data).to.eql(null);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"{{GLOBAL_PASSWORD}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/login",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": [
								{
									"name": "Login By Empty Email",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "2c35602c8c7118e6cbf876119fe1c209"
										},
										{
											"key": "Date",
											"value": "Fri, 11 Jun 2021 06:27:49 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "70"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"Email wajib diisi. \",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Login with empty password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error login with empty password\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.message).to.eql(\"Password wajib diisi. \");\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.data).to.eql(null);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{GLOBAL_EMAIL}}\",\r\n    \"password\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/login",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": [
								{
									"name": "Login By Empty Password",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "4bf0e4b825827c222fb9977970744071"
										},
										{
											"key": "Date",
											"value": "Fri, 11 Jun 2021 06:28:50 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "73"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"Password wajib diisi. \",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Login with mismatch password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error login with mismatch password\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(401);\r",
											"    pm.expect(jsonData.message).to.eql(\"email \\u0026 password tidak sesuai\");\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"password\", pm.environment.get(\"password\") + \"5678asd!!E\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{GLOBAL_EMAIL}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/login",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": [
								{
									"name": "2. Login",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "7b108210882cd8be4224bb45e19cf2c3"
										},
										{
											"key": "Date",
											"value": "Wed, 16 Jun 2021 15:49:42 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "77"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": true,\n    \"failedCount\": 1,\n    \"message\": \"email & password tidak sesuai\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Register New",
					"item": [
						{
							"name": "Register with valid params(medium pass)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"\r",
											"generated_email = makeid(5);\r",
											"generated_name = makeid(7);\r",
											"generated_pass =  \"0123456789\" + makeid(5);\r",
											"generated_lastname = makeid(8);\r",
											"pm.environment.set(\"email\", \"testsdet.\"+ generated_email+\"@1secmail.com\");\r",
											"pm.environment.set(\"password\",generated_pass);\r",
											"pm.environment.set(\"firstname\", \"sdet name \"+ generated_name);\r",
											"pm.environment.set(\"lastname\",generated_lastname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User successfully register with medium pass and valid params\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    email = pm.environment.get(\"email\");\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(jsonData.success).to.be.true;\r",
											"    pm.expect(jsonData.message).to.eql(\"Pengguna telah berhasil didaftarkan.\");\r",
											"    pm.expect(jsonData.data.passwordCheck).to.eql(\"Password Sedang\");\r",
											"    pm.expect(jsonData.data.data.email).to.eql(email);\r",
											"\r",
											"    var total = Object.keys(jsonData.data).length\r",
											"    pm.expect(total).greaterThan(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstname\": \"{{firstname}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"\",\n        \"token\": \"\"\n    },\n    \"facebook\": \"\",\n    \"google\": \"\",\n    \"lastName\": \"{{lastname}}\"\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/register",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"register"
									]
								},
								"description": "Register User Using Email"
							},
							"response": [
								{
									"name": "Register With Medium Password",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"\",\n        \"token\": \"\"\n    },\n    \"facebook\": \"\",\n    \"google\": \"\",\n    \"lastName\": \"{{lastname}}\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"register"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "set-cookie",
											"value": "kantormu=%7B%22user%22%3A%7B%22created_at%22%3A%22%22%2C%22first_name%22%3A%22sdet+name+iXiysUj%22%2C%22guid%22%3A%223ec65b2b-d6d8-4c08-9b48-e367b5ef8164%22%2C%22id%22%3A%22blRsZlp2cVZncFNwc1FtbzMzMzIzMjM5NjYzMTMyMzEzNjMxMzE2MjMxNjMzNjMzZTEyNzQ1YjJmNjRjYzIyMDdlNmFkMGZlZjc0MWU0OTUzMzUzNmU1MTAxN2U2ZTNhNWYwZjQwOGZkZDUwMGE2MTYzMzU2MTMxMzQzNzMyMzQ2NTM3NjUzMDM2MzAzNDMwYjhhZjY5MjExMTA0YTExZjg3NzAxMTk0OTMyYTE3Y2JhNDc0ZTI1ZTRjMThhZDk2ZjAxYmUyZjQ3MjU4ZDQ1YQ%3D%3D%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22%22%7D%2C%22version%22%3A%221.1.0%22%7D; Path=/; Domain=kompas.cloud; Max-Age=21600"
										},
										{
											"key": "set-cookie",
											"value": "kompas._token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuQXZRWlFAMXNlY21haWwuY29tIiwiaWQiOiIzZWM2NWIyYi1kNmQ4LTRjMDgtOWI0OC1lMzY3YjVlZjgxNjQiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzg2MTg4NSwiaWF0IjoxNjIzODYwOTg1LCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.KI_ZTxjAPwV79hrz_ddkukblRrfs7XD1Kuq6uIFUL5hOKJLMJ90f3Jv8rtZHHF8adAbDdykfHrUciEn0_WFfc5I4wEyhIijimraRFcnNo1BQ_4HlrtGFr59o4hH87p0f0PJNI7DbM0j9irSdesVyLsFwuWbzf3LAFfntTqz3Z02PQJI; Path=/; Domain=kompas.cloud; Max-Age=900"
										},
										{
											"key": "set-cookie",
											"value": "kompas._token_refresh=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkF2UVpRQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzk0NzM4NSwic3ViIjoxfQ.oDE4DqfCzfXuuCHvhr2MFQFm-Mg2KlmvhKblgVpKZR8EopXHOpvzuDo48xpdDidBBUUfmTYtCMpKNb5MAaGbfChYCiNhXYF2oHno7dIjEKf8j2uPmMTYZmVt6mRGAz3paYIyPWyDC7633eNxBby5jrZYmXC48F0DSNMPz_3W9o4d-1M; Path=/; Domain=kompas.cloud; Max-Age=21600"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "34b315edd6bb093c6603c5cef4426918;o=1"
										},
										{
											"key": "Date",
											"value": "Wed, 16 Jun 2021 16:29:46 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "1129"
										},
										{
											"key": "Expires",
											"value": "Wed, 16 Jun 2021 16:29:46 GMT"
										},
										{
											"key": "Cache-Control",
											"value": "private"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"accessToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuQXZRWlFAMXNlY21haWwuY29tIiwiaWQiOiIzZWM2NWIyYi1kNmQ4LTRjMDgtOWI0OC1lMzY3YjVlZjgxNjQiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzg2MTg4NSwiaWF0IjoxNjIzODYwOTg1LCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.KI_ZTxjAPwV79hrz_ddkukblRrfs7XD1Kuq6uIFUL5hOKJLMJ90f3Jv8rtZHHF8adAbDdykfHrUciEn0_WFfc5I4wEyhIijimraRFcnNo1BQ_4HlrtGFr59o4hH87p0f0PJNI7DbM0j9irSdesVyLsFwuWbzf3LAFfntTqz3Z02PQJI\",\n    \"data\": {\n        \"email\": \"testsdet.AvQZQ@1secmail.com\",\n        \"name\": \"sdet name iXiysUj\",\n        \"lastName\": \"nYECbulS\",\n        \"password\": \"0123456789KudZx\",\n        \"google\": \"\",\n        \"facebook\": \"\",\n        \"apple\": {\n            \"email\": \"\",\n            \"token\": \"\"\n        },\n        \"docReferrer\": \"\"\n    },\n    \"docReferrer\": \"\",\n    \"error\": false,\n    \"message\": \"Pengguna telah berhasil didaftarkan.\",\n    \"passwordCheck\": \"Password Sedang\",\n    \"refreshToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkF2UVpRQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzk0NzM4NSwic3ViIjoxfQ.oDE4DqfCzfXuuCHvhr2MFQFm-Mg2KlmvhKblgVpKZR8EopXHOpvzuDo48xpdDidBBUUfmTYtCMpKNb5MAaGbfChYCiNhXYF2oHno7dIjEKf8j2uPmMTYZmVt6mRGAz3paYIyPWyDC7633eNxBby5jrZYmXC48F0DSNMPz_3W9o4d-1M\"\n}"
								}
							]
						},
						{
							"name": "Register with valid params (strong password)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User successfully register with strong pass and valid params\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    email = pm.environment.get(\"email\");\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(jsonData.success).to.be.true;\r",
											"    pm.expect(jsonData.message).to.eql(\"Pengguna telah berhasil didaftarkan.\");\r",
											"    pm.expect(jsonData.data.passwordCheck).to.eql(\"Password kuat\");\r",
											"    pm.expect(jsonData.data.data.email).to.eql(email);\r",
											"    var total = Object.keys(jsonData.data).length\r",
											"    pm.expect(total).greaterThan(0);\r",
											"    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"\r",
											"generated_email = makeid(5);\r",
											"generated_name = makeid(7);\r",
											"generated_pass =  \"@@AsD1223!!\" + makeid(9);\r",
											"generated_lastname = makeid(8);\r",
											"pm.environment.set(\"email\", \"testsdet.\"+ generated_email+\"@1secmail.com\");\r",
											"pm.environment.set(\"password\",generated_pass);\r",
											"pm.environment.set(\"firstname\", \"sdet name \"+ generated_name);\r",
											"pm.environment.set(\"lastname\",generated_lastname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstname\": \"{{firstname}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"\",\n        \"token\": \"\"\n    },\n    \"facebook\": \"\",\n    \"google\": \"\",\n    \"lastName\": \"{{lastname}}\"\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/register",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"register"
									]
								},
								"description": "Register User Using Email"
							},
							"response": [
								{
									"name": "Register With Strong Password",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"\",\n        \"token\": \"\"\n    },\n    \"facebook\": \"\",\n    \"google\": \"\",\n    \"lastName\": \"{{lastname}}\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"register"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "set-cookie",
											"value": "kantormu=%7B%22user%22%3A%7B%22created_at%22%3A%22%22%2C%22first_name%22%3A%22sdet+name+WwUNbRS%22%2C%22guid%22%3A%2264a7a9a5-24f2-4559-b71a-b78a2ffb9608%22%2C%22id%22%3A%22dWNlaHFHd1Byd0hvbUNORDMzMzIzMjM5NjYzMTMyMzEzNjMxMzE2MjMxNjMzNjMzMDQ1MzJlYWI4YTZjMGM1ZDUwMTQwNzMxYjc3ZjQ0ZGMwM2JkY2ZmZmZkZjFlYzdkYjYxYjk4ODRkODIyZjIxNTYzMzU2MTMxMzQzNzMyMzQ2NTM3NjUzMDM2MzAzNDMwNjg2ODU2MjJlZDBhMmUzNTIzNWNjMmYyM2UyOWNjOGIwMmVmZjZjYWQ2YjAzZDBkODBiMjhlMTY0YzJjYjczOA%3D%3D%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22%22%7D%2C%22version%22%3A%221.1.0%22%7D; Path=/; Domain=kompas.cloud; Max-Age=21600"
										},
										{
											"key": "set-cookie",
											"value": "kompas._token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuRGF3ZG1AMXNlY21haWwuY29tIiwiaWQiOiI2NGE3YTlhNS0yNGYyLTQ1NTktYjcxYS1iNzhhMmZmYjk2MDgiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzg2MTU1MiwiaWF0IjoxNjIzODYwNjUyLCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.FKEIZyTW8i23bYAzLQmOPs7K1oljWLdpCUI6_ANGYKj2OWETVlDbN9aYLC_JqHYGgJbH7yH0KgpMKKsjrGuPArQdZdsPnMx7Py07legGHi0FhvJtWqL5VZ95MKBzz4f7dDtWhVWlLeaNzAkt51xG7uNrjTnofbejk92XYsEjZFC2xYw; Path=/; Domain=kompas.cloud; Max-Age=900"
										},
										{
											"key": "set-cookie",
											"value": "kompas._token_refresh=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkRhd2RtQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzk0NzA1Miwic3ViIjoxfQ.TQPpg1gve6tyrFUvnLEtN0kVDobJmY1v9RiUDplnQjKtniLrqxRATYu2HLn1A-VZoKd35Dl8Bfumt51suoq7on7t71G27nZ-jPvL9u-WZecSobepMTlbkv3Ku40_lwPteLSHTQzYbX3Di4zMmfcFK_gRUBqvh_v1lDeTuEmpi9GAJa8; Path=/; Domain=kompas.cloud; Max-Age=21600"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "191bac2e29f24abf1320e2659d96f739;o=1"
										},
										{
											"key": "Date",
											"value": "Wed, 16 Jun 2021 16:24:13 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "1132"
										},
										{
											"key": "Expires",
											"value": "Wed, 16 Jun 2021 16:24:13 GMT"
										},
										{
											"key": "Cache-Control",
											"value": "private"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"accessToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuRGF3ZG1AMXNlY21haWwuY29tIiwiaWQiOiI2NGE3YTlhNS0yNGYyLTQ1NTktYjcxYS1iNzhhMmZmYjk2MDgiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzg2MTU1MiwiaWF0IjoxNjIzODYwNjUyLCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.FKEIZyTW8i23bYAzLQmOPs7K1oljWLdpCUI6_ANGYKj2OWETVlDbN9aYLC_JqHYGgJbH7yH0KgpMKKsjrGuPArQdZdsPnMx7Py07legGHi0FhvJtWqL5VZ95MKBzz4f7dDtWhVWlLeaNzAkt51xG7uNrjTnofbejk92XYsEjZFC2xYw\",\n    \"data\": {\n        \"email\": \"testsdet.Dawdm@1secmail.com\",\n        \"name\": \"sdet name WwUNbRS\",\n        \"lastName\": \"VZuflPTw\",\n        \"password\": \"@@AsD1223!!eAjYHOgFr\",\n        \"google\": \"\",\n        \"facebook\": \"\",\n        \"apple\": {\n            \"email\": \"\",\n            \"token\": \"\"\n        },\n        \"docReferrer\": \"\"\n    },\n    \"docReferrer\": \"\",\n    \"error\": false,\n    \"message\": \"Pengguna telah berhasil didaftarkan.\",\n    \"passwordCheck\": \"Password kuat\",\n    \"refreshToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkRhd2RtQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzk0NzA1Miwic3ViIjoxfQ.TQPpg1gve6tyrFUvnLEtN0kVDobJmY1v9RiUDplnQjKtniLrqxRATYu2HLn1A-VZoKd35Dl8Bfumt51suoq7on7t71G27nZ-jPvL9u-WZecSobepMTlbkv3Ku40_lwPteLSHTQzYbX3Di4zMmfcFK_gRUBqvh_v1lDeTuEmpi9GAJa8\"\n}"
								}
							]
						},
						{
							"name": "Register with registered email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error register with registered email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.message).to.eql(\"Email telah digunakan.\");\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.data).to.eql('');\r",
											"});\r",
											";\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"\r",
											"generated_name = makeid(7);\r",
											"pm.environment.set(\"name\", \"sdet name \"+generated_name);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{GLOBAL_EMAIL}}\",\n    \"firstname\": \"{{firstname}}\",\n    \"password\": \"{{GLOBAL_PASSWORD}}\",\n    \"apple\": {\n        \"email\": \"in\",\n        \"token\": \"dolor laboris repre\"\n    },\n    \"facebook\": \"enim ad\",\n    \"google\": \"Duis incididunt\",\n    \"lastName\": \"enim\"\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/register",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"register"
									]
								},
								"description": "Register User Using Email"
							},
							"response": [
								{
									"name": "2. Register dengan Email yang sudah terdaftar",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"in\",\n        \"token\": \"dolor laboris repre\"\n    },\n    \"facebook\": \"enim ad\",\n    \"google\": \"Duis incididunt\",\n    \"lastName\": \"enim\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"register"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "664f4f8d3fcd8752c0a5bc92d38b1caa;o=1"
										},
										{
											"key": "Date",
											"value": "Tue, 15 Jun 2021 02:00:41 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "72"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"email telah digunakan\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Register with invalid email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var characters_pass  = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"\r",
											"generated_email = makeid(5);\r",
											"generated_name = makeid(7);\r",
											"generated_pass = \"@123\" + makeid(9);\r",
											"pm.environment.set(\"email\", \"testsdet.\"+ generated_email+\"1secmail.com\");\r",
											"pm.environment.set(\"password\",generated_pass);\r",
											"pm.environment.set(\"firstname\", \"sdet name \"+ generated_name);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error register with invalid email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.message).to.eql(\"Email harus berupa alamat email yang valid. \");\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.data).to.eql(null);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstname\": \"{{firstname}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"in\",\n        \"token\": \"dolor laboris repre\"\n    },\n    \"facebook\": \"enim ad\",\n    \"google\": \"Duis incididunt\",\n    \"lastName\": \"enim\"\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/register",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"register"
									]
								},
								"description": "Register User Using Email"
							},
							"response": [
								{
									"name": "Register dengan Email tidak sesuai format",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"in\",\n        \"token\": \"dolor laboris repre\"\n    },\n    \"facebook\": \"enim ad\",\n    \"google\": \"Duis incididunt\",\n    \"lastName\": \"enim\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"register"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "62b1d0c16c72eaa108318ea1d5d058bc;o=1"
										},
										{
											"key": "Date",
											"value": "Tue, 15 Jun 2021 02:12:32 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "95"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"Email harus berupa alamat email yang valid. \",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Register with empty firstname",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var characters_pass  = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"\r",
											"generated_email = makeid(5);\r",
											"generated_name = makeid(7);\r",
											"generated_pass = \"@123\" + makeid(9);\r",
											"pm.environment.set(\"email\", \"testsdet.\"+ generated_email+\"@1secmail.com\");\r",
											"pm.environment.set(\"password\",generated_pass);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error register with empty firstname\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.message).to.eql(\"Nama Depan wajib diisi. \");\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.data).to.eql(null);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstname\": \"\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"in\",\n        \"token\": \"dolor laboris repre\"\n    },\n    \"facebook\": \"enim ad\",\n    \"google\": \"Duis incididunt\",\n    \"lastName\": \"enim\"\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/register",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"register"
									]
								},
								"description": "Register User Using Email"
							},
							"response": [
								{
									"name": "Register dengan Nama depan kosong",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"in\",\n        \"token\": \"dolor laboris repre\"\n    },\n    \"facebook\": \"enim ad\",\n    \"google\": \"Duis incididunt\",\n    \"lastName\": \"enim\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"register"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "51e5f13f93a8d4e214ffdde680690ef4;o=1"
										},
										{
											"key": "Date",
											"value": "Tue, 15 Jun 2021 02:17:54 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "69"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"Name wajib diisi. \",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Register with empty password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var characters_pass  = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"\r",
											"generated_email = makeid(5);\r",
											"generated_name = makeid(7);\r",
											"generated_pass = \"@123\" + makeid(9);\r",
											"pm.environment.set(\"email\", \"testsdet.\"+ generated_email+\"@1secmail.com\");\r",
											"pm.environment.set(\"firstname\", \"sdet name \"+ generated_name);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error register with empty password\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.message).to.eql(\"Password wajib diisi. \");\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstname\": \"{{firstname}}\",\n    \"password\": \"\",\n    \"apple\": {\n        \"email\": \"in\",\n        \"token\": \"dolor laboris repre\"\n    },\n    \"facebook\": \"enim ad\",\n    \"google\": \"Duis incididunt\",\n    \"lastName\": \"enim\"\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/register",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"register"
									]
								},
								"description": "Register User Using Email"
							},
							"response": [
								{
									"name": "Register dengan Password kosong",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"in\",\n        \"token\": \"dolor laboris repre\"\n    },\n    \"facebook\": \"enim ad\",\n    \"google\": \"Duis incididunt\",\n    \"lastName\": \"enim\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"register"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "c1848ce5523ddcfcc1f4134aabf09804;o=1"
										},
										{
											"key": "Date",
											"value": "Tue, 15 Jun 2021 02:20:30 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "73"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"Password wajib diisi. \",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Register with empty email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var characters_pass  = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"\r",
											"generated_email = makeid(5);\r",
											"generated_name = makeid(7);\r",
											"generated_pass = \"@123\" + makeid(9);\r",
											"pm.environment.set(\"password\",generated_pass);\r",
											"pm.environment.set(\"firstname\", \"sdet name \"+ generated_name);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error register with empty email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.message).to.eql(\"Email wajib diisi. \");\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"\",\n    \"firstname\": \"{{firstname}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"in\",\n        \"token\": \"dolor laboris repre\"\n    },\n    \"facebook\": \"enim ad\",\n    \"google\": \"Duis incididunt\",\n    \"lastName\": \"enim\"\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/register",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"register"
									]
								},
								"description": "Register User Using Email"
							},
							"response": [
								{
									"name": "Register dengan Email kosong",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"in\",\n        \"token\": \"dolor laboris repre\"\n    },\n    \"facebook\": \"enim ad\",\n    \"google\": \"Duis incididunt\",\n    \"lastName\": \"enim\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"register"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "84072b4c00de50dea2314b1dcb8c9ef1;o=1"
										},
										{
											"key": "Date",
											"value": "Tue, 15 Jun 2021 02:23:18 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "70"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"Email wajib diisi. \",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Register with invalid firstname",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error register with invalid firstname\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.message).to.eql(\"Nama depan mengandung spesial karakter\");\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.data).to.eql('');\r",
											"    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"\r",
											"generated_email = makeid(5);\r",
											"generated_name = makeid(7);\r",
											"generated_pass = \"@123\" + makeid(9);\r",
											"pm.environment.set(\"email\", \"testsdet.\"+ generated_email+\"@1secmail.com\");\r",
											"pm.environment.set(\"password\",generated_pass);\r",
											"pm.environment.set(\"firstname\", \"sdet name \"+ \"%%^^&\" + generated_name);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstname\": \"{{firstname}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"in\",\n        \"token\": \"dolor laboris repre\"\n    },\n    \"facebook\": \"enim ad\",\n    \"google\": \"Duis incididunt\",\n    \"lastName\": \"enim\"\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/register",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"register"
									]
								},
								"description": "Register User Using Email"
							},
							"response": [
								{
									"name": "Register dengan Nama depan tidak sesuai Format",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"in\",\n        \"token\": \"dolor laboris repre\"\n    },\n    \"facebook\": \"enim ad\",\n    \"google\": \"Duis incididunt\",\n    \"lastName\": \"enim\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"register"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "71fea07bda12cf4c12a4976e6cc5833d;o=1"
										},
										{
											"key": "Date",
											"value": "Tue, 15 Jun 2021 02:37:29 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "89"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"nama depan mengandung spesial karakter\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Register with invalid password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error register with invalid password\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.message).to.eql(\"Password Lemah\");\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.data).to.eql('');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var characters_pass  = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"\r",
											"generated_email = makeid(5);\r",
											"generated_name = makeid(7);\r",
											"generated_pass = makeid(9);\r",
											"pm.environment.set(\"email\", \"testsdet.\"+ generated_email+\"@1secmail.com\");\r",
											"pm.environment.set(\"password\",generated_pass);\r",
											"pm.environment.set(\"firstname\", \"sdet name \"+ generated_name);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstname\": \"{{firstname}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"in\",\n        \"token\": \"dolor laboris repre\"\n    },\n    \"facebook\": \"enim ad\",\n    \"google\": \"Duis incididunt\",\n    \"lastName\": \"enim\"\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/register",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"register"
									]
								},
								"description": "Register User Using Email"
							},
							"response": [
								{
									"name": "Register dengan Password tidak sesuai format",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"in\",\n        \"token\": \"dolor laboris repre\"\n    },\n    \"facebook\": \"enim ad\",\n    \"google\": \"Duis incididunt\",\n    \"lastName\": \"enim\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"register"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "e8cf94445c70f34eda7cfbbf6abad37c;o=1"
										},
										{
											"key": "Date",
											"value": "Tue, 15 Jun 2021 02:41:12 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "65"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"password lemah\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Register with invalid params",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error register with invalid params\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.message).to.eql(\"Email wajib diisi. Nama Depan wajib diisi. Password wajib diisi. \");\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.data).to.eql(null);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"\",\n    \"firstname\": \"\",\n    \"password\": \"\",\n    \"apple\": {\n        \"email\": \"in\",\n        \"token\": \"dolor laboris repre\"\n    },\n    \"facebook\": \"enim ad\",\n    \"google\": \"Duis incididunt\",\n    \"lastName\": \"enim\"\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/register",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"register"
									]
								},
								"description": "Register User Using Email"
							},
							"response": [
								{
									"name": "Register dengan inputan kosong",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"in\",\n        \"token\": \"dolor laboris repre\"\n    },\n    \"facebook\": \"enim ad\",\n    \"google\": \"Duis incididunt\",\n    \"lastName\": \"enim\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"register"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "d92bdc6df0c49a707de7c775ea0e06e5;o=1"
										},
										{
											"key": "Date",
											"value": "Tue, 15 Jun 2021 02:43:04 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "110"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"Email wajib diisi. Name wajib diisi. Password wajib diisi. \",\n    \"data\": []\n}"
								}
							]
						}
					]
				},
				{
					"name": "Login 6th fail after 5x fail & 1x Success",
					"item": [
						{
							"name": "TestSetup",
							"item": [
								{
									"name": "Register",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function makeid(length) {\r",
													"    var result           = '';\r",
													"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
													"    var charactersLength = characters.length;\r",
													"    for ( var i = 0; i < length; i++ ) {\r",
													"      result += characters.charAt(Math.floor(Math.random() * \r",
													" charactersLength));\r",
													"   }\r",
													"   return result;\r",
													"}\r",
													"\r",
													"generated_email = makeid(5);\r",
													"generated_name = makeid(7);\r",
													"generated_pass =  \"@@AsD1223!!\" + makeid(9);\r",
													"generated_lastname = makeid(8);\r",
													"pm.environment.set(\"email\", \"testsdet.\"+ generated_email+\"@1secmail.com\");\r",
													"pm.environment.set(\"password\",generated_pass);\r",
													"pm.environment.set(\"firstname\", \"sdet name \"+ generated_name);\r",
													"pm.environment.set(\"lastname\",generated_lastname);\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Set env email, password, accesstoken\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.environment.set(\"email\",jsonData.data.data.email)\r",
													"    pm.environment.set(\"password\",jsonData.data.data.password)\r",
													"    pm.environment.set(\"accessToken\",jsonData.data.accessToken)\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstname\": \"{{firstname}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"\",\n        \"token\": \"\"\n    },\n    \"facebook\": \"\",\n    \"google\": \"\",\n    \"lastName\": \"{{lastname}}\"\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/register",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"register"
											]
										},
										"description": "Register User Using Email"
									},
									"response": [
										{
											"name": "1. Register",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"\",\n        \"token\": \"\"\n    },\n    \"facebook\": \"\",\n    \"google\": \"\",\n    \"lastName\": \"{{lastname}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"register"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "access-control-allow-credentials",
													"value": "true"
												},
												{
													"key": "access-control-allow-headers",
													"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
												},
												{
													"key": "access-control-allow-methods",
													"value": "GET,POST"
												},
												{
													"key": "access-control-allow-origin",
													"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
												},
												{
													"key": "content-type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "set-cookie",
													"value": "kantormu=%7B%22user%22%3A%7B%22created_at%22%3A%22%22%2C%22first_name%22%3A%22sdet+name+gLkonuw%22%2C%22guid%22%3A%225f3390af-172e-4572-8329-ae588b64f046%22%2C%22id%22%3A%22dUFFdlNVbWN6bnhURnBwYTMzMzIzMjM5NjYzMTMyMzEzNjMxMzE2MjMxNjMzNjMzZjIxY2QzNmQ2NzE0ZjcwYzczZjc1NmVjM2NlYTIxYzBlZjQzMzQ2MmY1M2VmOWMxNjYyNTk4NjAwN2U0M2JkMDYzMzU2MTMxMzQzNzMyMzQ2NTM3NjUzMDM2MzAzNDMwZjc5YjMwMTQwYWU1NmFiMTliZTJmNTkxNzUxY2Y1YTJhZWI2MzMyNDhiYzJjYmJlYTY2NWY4Mjg0MGU0OTQ4NQ%3D%3D%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22%22%7D%2C%22version%22%3A%221.1.0%22%7D; Path=/; Domain=kompas.cloud; Max-Age=21600"
												},
												{
													"key": "set-cookie",
													"value": "kompas._token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuQ0xldFlAMXNlY21haWwuY29tIiwiaWQiOiI1ZjMzOTBhZi0xNzJlLTQ1NzItODMyOS1hZTU4OGI2NGYwNDYiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzgzMTI3MSwiaWF0IjoxNjIzODMwMzcxLCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.T9wynJBKDhPpolYwxTw4ranuHGwSj4RVZOEngHAC-bswUb4exXItipb1-F81KHLA0WFibtGNa0C-InTBMpl_JZXNb9mUvSnD4VU65t9g-0-5nD9bPva7k6J0Dg9RpLSfuu4zMSUykts-6gTQGFCt6OAl0fVLu6bbFT5uJ_lu5o4CBrM; Path=/; Domain=kompas.cloud; Max-Age=900"
												},
												{
													"key": "set-cookie",
													"value": "kompas._token_refresh=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkNMZXRZQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzkxNjc3MSwic3ViIjoxfQ.IJhjSVfnYjJbIDVxRoTMIcSFta_FRSiJTZ0YZxJjOSlyRojDoLNh8p4noPECNPI9O51IcYPpIf9KkwcIDh9rN5UV63Qq082r7LrgxMlRjWzXc3Y4vJPRhtujP568j_zV7SF5pMpH9XeOZweyJjp0nbXcslIGycDd8PRHnysKxy9OMok; Path=/; Domain=kompas.cloud; Max-Age=21600"
												},
												{
													"key": "X-Cloud-Trace-Context",
													"value": "16812f2da853d779ffb5c06f498dfde5;o=1"
												},
												{
													"key": "Date",
													"value": "Wed, 16 Jun 2021 07:59:32 GMT"
												},
												{
													"key": "Server",
													"value": "Google Frontend"
												},
												{
													"key": "Content-Length",
													"value": "1132"
												},
												{
													"key": "Expires",
													"value": "Wed, 16 Jun 2021 07:59:32 GMT"
												},
												{
													"key": "Cache-Control",
													"value": "private"
												},
												{
													"key": "Alt-Svc",
													"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
												}
											],
											"cookie": [],
											"body": "{\n    \"accessToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuQ0xldFlAMXNlY21haWwuY29tIiwiaWQiOiI1ZjMzOTBhZi0xNzJlLTQ1NzItODMyOS1hZTU4OGI2NGYwNDYiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzgzMTI3MSwiaWF0IjoxNjIzODMwMzcxLCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.T9wynJBKDhPpolYwxTw4ranuHGwSj4RVZOEngHAC-bswUb4exXItipb1-F81KHLA0WFibtGNa0C-InTBMpl_JZXNb9mUvSnD4VU65t9g-0-5nD9bPva7k6J0Dg9RpLSfuu4zMSUykts-6gTQGFCt6OAl0fVLu6bbFT5uJ_lu5o4CBrM\",\n    \"data\": {\n        \"email\": \"testsdet.CLetY@1secmail.com\",\n        \"name\": \"sdet name gLkonuw\",\n        \"lastName\": \"KFfHiLZw\",\n        \"password\": \"@@AsD1223!!PgpqFIamY\",\n        \"google\": \"\",\n        \"facebook\": \"\",\n        \"apple\": {\n            \"email\": \"\",\n            \"token\": \"\"\n        },\n        \"docReferrer\": \"\"\n    },\n    \"docReferrer\": \"\",\n    \"error\": false,\n    \"message\": \"Pengguna telah berhasil didaftarkan.\",\n    \"passwordCheck\": \"Password kuat\",\n    \"refreshToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkNMZXRZQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzkxNjc3MSwic3ViIjoxfQ.IJhjSVfnYjJbIDVxRoTMIcSFta_FRSiJTZ0YZxJjOSlyRojDoLNh8p4noPECNPI9O51IcYPpIf9KkwcIDh9rN5UV63Qq082r7LrgxMlRjWzXc3Y4vJPRhtujP568j_zV7SF5pMpH9XeOZweyJjp0nbXcslIGycDd8PRHnysKxy9OMok\"\n}"
										}
									]
								},
								{
									"name": "Login With Wrong Password 5X",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"email = pm.environment.get(\"email\");\r",
													"pass = \"password_salah\";\r",
													"\r",
													"//login salah sebanyak 4x dari pre-script\r",
													"//login salah ke 5 akan terblokir (login ke 5 bkn dari pre-script, tapi dari URL UI diatas)\r",
													"var myVar = setInterval(hitLogin, 5000);\r",
													"counter = 0;\r",
													"function hitLogin(){\r",
													"pm.sendRequest({\r",
													"    url: 'https://go-oauth2-dev-jp2wsmfbfq-uc.a.run.app/api/v1/login',\r",
													"    method: 'POST',\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ email: email,\r",
													"                              password: pass })\r",
													"    }\r",
													"}, function (err, res) {\r",
													"    console.log(res);\r",
													"});\r",
													"counter = counter + 1;\r",
													"if(counter >=4){\r",
													"    clearInterval(myVar);\r",
													"}\r",
													"}\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"User get error login with wrong password 5x\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.response.to.have.status(401);\r",
													"    pm.expect(jsonData.success).to.be.false;\r",
													"    pm.expect(jsonData.message).to.eql(\"Gagal masuk lebih dari 5 kali.\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"password_salah\"\r\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/login",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": [
										{
											"name": "Login With Wrong Password 5X",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"password_salah\"\r\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "access-control-allow-credentials",
													"value": "true"
												},
												{
													"key": "access-control-allow-headers",
													"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
												},
												{
													"key": "access-control-allow-methods",
													"value": "GET,POST"
												},
												{
													"key": "access-control-allow-origin",
													"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
												},
												{
													"key": "content-type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "X-Cloud-Trace-Context",
													"value": "49b0fc433cf4646b675d8a94bf5f70ab"
												},
												{
													"key": "Date",
													"value": "Mon, 14 Jun 2021 15:31:01 GMT"
												},
												{
													"key": "Server",
													"value": "Google Frontend"
												},
												{
													"key": "Content-Length",
													"value": "76"
												},
												{
													"key": "Alt-Svc",
													"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": true,\n    \"message\": \"gagal masuk lebih dari 5 kali\",\n    \"timeRemaining\": 299\n}"
										}
									]
								}
							]
						},
						{
							"name": "Login With Match Password and Email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//login menggunakan email dan password yang tepat\r",
											"\r",
											"pm.environment.set(\"email\", pm.environment.get(\"email\"));\r",
											"pm.environment.set(\"password\", pm.environment.get(\"password\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error login 6th after fail login 5x\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(401);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.eql(\"Anda belum berhasil masuk Kompas.id.\");\r",
											"    pm.expect(jsonData.data.loginBlocked).to.be.true;\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/login",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": [
								{
									"name": "Login With Match Password and Email",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "7ee38bdd7ea1cd4fc512e9016e5431fa;o=1"
										},
										{
											"key": "Date",
											"value": "Mon, 14 Jun 2021 15:31:12 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": true,\n    \"loginBlocked\": true,\n    \"message\": \"Anda belum berhasil masuk Kompas.id.\",\n    \"timeRemaining\": 289\n}"
								}
							]
						}
					]
				},
				{
					"name": "Login 6th fail after 5x Success",
					"item": [
						{
							"name": "TestSetup",
							"item": [
								{
									"name": "Register",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function makeid(length) {\r",
													"    var result           = '';\r",
													"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
													"    var charactersLength = characters.length;\r",
													"    for ( var i = 0; i < length; i++ ) {\r",
													"      result += characters.charAt(Math.floor(Math.random() * \r",
													" charactersLength));\r",
													"   }\r",
													"   return result;\r",
													"}\r",
													"\r",
													"generated_email = makeid(5);\r",
													"generated_name = makeid(7);\r",
													"generated_pass =  \"@@AsD1223!!\" + makeid(9);\r",
													"generated_lastname = makeid(8);\r",
													"pm.environment.set(\"email\", \"testsdet.\"+ generated_email+\"@1secmail.com\");\r",
													"pm.environment.set(\"password\",generated_pass);\r",
													"pm.environment.set(\"firstname\", \"sdet name \"+ generated_name);\r",
													"pm.environment.set(\"lastname\",generated_lastname);\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Set env email, password, accesstoken\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.environment.set(\"email\",jsonData.data.data.email)\r",
													"    pm.environment.set(\"password\",jsonData.data.data.password)\r",
													"    pm.environment.set(\"accessToken\",jsonData.data.accessToken)\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstname\": \"{{firstname}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"\",\n        \"token\": \"\"\n    },\n    \"facebook\": \"\",\n    \"google\": \"\",\n    \"lastName\": \"{{lastname}}\"\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/register",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"register"
											]
										},
										"description": "Register User Using Email"
									},
									"response": [
										{
											"name": "1. Register",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"\",\n        \"token\": \"\"\n    },\n    \"facebook\": \"\",\n    \"google\": \"\",\n    \"lastName\": \"{{lastname}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"register"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "access-control-allow-credentials",
													"value": "true"
												},
												{
													"key": "access-control-allow-headers",
													"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
												},
												{
													"key": "access-control-allow-methods",
													"value": "GET,POST"
												},
												{
													"key": "access-control-allow-origin",
													"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
												},
												{
													"key": "content-type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "set-cookie",
													"value": "kantormu=%7B%22user%22%3A%7B%22created_at%22%3A%22%22%2C%22first_name%22%3A%22sdet+name+gLkonuw%22%2C%22guid%22%3A%225f3390af-172e-4572-8329-ae588b64f046%22%2C%22id%22%3A%22dUFFdlNVbWN6bnhURnBwYTMzMzIzMjM5NjYzMTMyMzEzNjMxMzE2MjMxNjMzNjMzZjIxY2QzNmQ2NzE0ZjcwYzczZjc1NmVjM2NlYTIxYzBlZjQzMzQ2MmY1M2VmOWMxNjYyNTk4NjAwN2U0M2JkMDYzMzU2MTMxMzQzNzMyMzQ2NTM3NjUzMDM2MzAzNDMwZjc5YjMwMTQwYWU1NmFiMTliZTJmNTkxNzUxY2Y1YTJhZWI2MzMyNDhiYzJjYmJlYTY2NWY4Mjg0MGU0OTQ4NQ%3D%3D%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22%22%7D%2C%22version%22%3A%221.1.0%22%7D; Path=/; Domain=kompas.cloud; Max-Age=21600"
												},
												{
													"key": "set-cookie",
													"value": "kompas._token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuQ0xldFlAMXNlY21haWwuY29tIiwiaWQiOiI1ZjMzOTBhZi0xNzJlLTQ1NzItODMyOS1hZTU4OGI2NGYwNDYiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzgzMTI3MSwiaWF0IjoxNjIzODMwMzcxLCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.T9wynJBKDhPpolYwxTw4ranuHGwSj4RVZOEngHAC-bswUb4exXItipb1-F81KHLA0WFibtGNa0C-InTBMpl_JZXNb9mUvSnD4VU65t9g-0-5nD9bPva7k6J0Dg9RpLSfuu4zMSUykts-6gTQGFCt6OAl0fVLu6bbFT5uJ_lu5o4CBrM; Path=/; Domain=kompas.cloud; Max-Age=900"
												},
												{
													"key": "set-cookie",
													"value": "kompas._token_refresh=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkNMZXRZQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzkxNjc3MSwic3ViIjoxfQ.IJhjSVfnYjJbIDVxRoTMIcSFta_FRSiJTZ0YZxJjOSlyRojDoLNh8p4noPECNPI9O51IcYPpIf9KkwcIDh9rN5UV63Qq082r7LrgxMlRjWzXc3Y4vJPRhtujP568j_zV7SF5pMpH9XeOZweyJjp0nbXcslIGycDd8PRHnysKxy9OMok; Path=/; Domain=kompas.cloud; Max-Age=21600"
												},
												{
													"key": "X-Cloud-Trace-Context",
													"value": "16812f2da853d779ffb5c06f498dfde5;o=1"
												},
												{
													"key": "Date",
													"value": "Wed, 16 Jun 2021 07:59:32 GMT"
												},
												{
													"key": "Server",
													"value": "Google Frontend"
												},
												{
													"key": "Content-Length",
													"value": "1132"
												},
												{
													"key": "Expires",
													"value": "Wed, 16 Jun 2021 07:59:32 GMT"
												},
												{
													"key": "Cache-Control",
													"value": "private"
												},
												{
													"key": "Alt-Svc",
													"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
												}
											],
											"cookie": [],
											"body": "{\n    \"accessToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuQ0xldFlAMXNlY21haWwuY29tIiwiaWQiOiI1ZjMzOTBhZi0xNzJlLTQ1NzItODMyOS1hZTU4OGI2NGYwNDYiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzgzMTI3MSwiaWF0IjoxNjIzODMwMzcxLCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.T9wynJBKDhPpolYwxTw4ranuHGwSj4RVZOEngHAC-bswUb4exXItipb1-F81KHLA0WFibtGNa0C-InTBMpl_JZXNb9mUvSnD4VU65t9g-0-5nD9bPva7k6J0Dg9RpLSfuu4zMSUykts-6gTQGFCt6OAl0fVLu6bbFT5uJ_lu5o4CBrM\",\n    \"data\": {\n        \"email\": \"testsdet.CLetY@1secmail.com\",\n        \"name\": \"sdet name gLkonuw\",\n        \"lastName\": \"KFfHiLZw\",\n        \"password\": \"@@AsD1223!!PgpqFIamY\",\n        \"google\": \"\",\n        \"facebook\": \"\",\n        \"apple\": {\n            \"email\": \"\",\n            \"token\": \"\"\n        },\n        \"docReferrer\": \"\"\n    },\n    \"docReferrer\": \"\",\n    \"error\": false,\n    \"message\": \"Pengguna telah berhasil didaftarkan.\",\n    \"passwordCheck\": \"Password kuat\",\n    \"refreshToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkNMZXRZQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzkxNjc3MSwic3ViIjoxfQ.IJhjSVfnYjJbIDVxRoTMIcSFta_FRSiJTZ0YZxJjOSlyRojDoLNh8p4noPECNPI9O51IcYPpIf9KkwcIDh9rN5UV63Qq082r7LrgxMlRjWzXc3Y4vJPRhtujP568j_zV7SF5pMpH9XeOZweyJjp0nbXcslIGycDd8PRHnysKxy9OMok\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Login Success Max 5x",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"email = pm.environment.get(\"email\");\r",
											"pass = pm.environment.get(\"password\");\r",
											"\r",
											"//login berhasil sebanyak 5x dari pre-script\r",
											"//login gagal yang ke 6 karena max 5x login (login ke 6 bkn dari pre-script, tapi dari URL UI diatas)\r",
											"var myVar = setInterval(hitLogin, 5000);\r",
											"counter = 0;\r",
											"function hitLogin(){\r",
											"pm.sendRequest({\r",
											"    url: 'https://go-oauth2-dev-jp2wsmfbfq-uc.a.run.app/api/v1/login',\r",
											"    method: 'POST',\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({ email: email,\r",
											"                              password: pass })\r",
											"    }\r",
											"}, function (err, res) {\r",
											"    console.log(res);\r",
											"});\r",
											"counter = counter + 1;\r",
											"if(counter >=5){\r",
											"    clearInterval(myVar);\r",
											"}\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"User Get error login 6th after successfully login 5x \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(401);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.eql(\"Anda telah melampaui jumlah maksimum akses untuk masuk Kompas.id. Silakan coba beberapa saat lagi.\");\r",
											"    pm.expect(jsonData.data.LimitLogin).to.be.true;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/login",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": [
								{
									"name": "2.Login Success Max 5x",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "8ae261c7a45821fb6f5803363ba4d7c5"
										},
										{
											"key": "Date",
											"value": "Mon, 14 Jun 2021 15:33:11 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "143"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": true,\n    \"limitLogin\": true,\n    \"message\": \"Anda telah melampaui jumlah maksimum akses untuk masuk Kompas.id. Silakan coba beberapa saat lagi.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Login 5th fail after 4x fail",
					"item": [
						{
							"name": "TestSetup",
							"item": [
								{
									"name": "Register",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function makeid(length) {\r",
													"    var result           = '';\r",
													"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
													"    var charactersLength = characters.length;\r",
													"    for ( var i = 0; i < length; i++ ) {\r",
													"      result += characters.charAt(Math.floor(Math.random() * \r",
													" charactersLength));\r",
													"   }\r",
													"   return result;\r",
													"}\r",
													"\r",
													"generated_email = makeid(5);\r",
													"generated_name = makeid(7);\r",
													"generated_pass =  \"@@AsD1223!!\" + makeid(9);\r",
													"generated_lastname = makeid(8);\r",
													"pm.environment.set(\"email\", \"testsdet.\"+ generated_email+\"@1secmail.com\");\r",
													"pm.environment.set(\"password\",generated_pass);\r",
													"pm.environment.set(\"firstname\", \"sdet name \"+ generated_name);\r",
													"pm.environment.set(\"lastname\",generated_lastname);\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Set env email, password, accesstoken\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.environment.set(\"email\",jsonData.data.data.email)\r",
													"    pm.environment.set(\"password\",jsonData.data.data.password)\r",
													"    pm.environment.set(\"accessToken\",jsonData.data.accessToken)\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstname\": \"{{firstname}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"\",\n        \"token\": \"\"\n    },\n    \"facebook\": \"\",\n    \"google\": \"\",\n    \"lastName\": \"{{lastname}}\"\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/register",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"register"
											]
										},
										"description": "Register User Using Email"
									},
									"response": [
										{
											"name": "1. Register",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"\",\n        \"token\": \"\"\n    },\n    \"facebook\": \"\",\n    \"google\": \"\",\n    \"lastName\": \"{{lastname}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"register"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "access-control-allow-credentials",
													"value": "true"
												},
												{
													"key": "access-control-allow-headers",
													"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
												},
												{
													"key": "access-control-allow-methods",
													"value": "GET,POST"
												},
												{
													"key": "access-control-allow-origin",
													"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
												},
												{
													"key": "content-type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "set-cookie",
													"value": "kantormu=%7B%22user%22%3A%7B%22created_at%22%3A%22%22%2C%22first_name%22%3A%22sdet+name+gLkonuw%22%2C%22guid%22%3A%225f3390af-172e-4572-8329-ae588b64f046%22%2C%22id%22%3A%22dUFFdlNVbWN6bnhURnBwYTMzMzIzMjM5NjYzMTMyMzEzNjMxMzE2MjMxNjMzNjMzZjIxY2QzNmQ2NzE0ZjcwYzczZjc1NmVjM2NlYTIxYzBlZjQzMzQ2MmY1M2VmOWMxNjYyNTk4NjAwN2U0M2JkMDYzMzU2MTMxMzQzNzMyMzQ2NTM3NjUzMDM2MzAzNDMwZjc5YjMwMTQwYWU1NmFiMTliZTJmNTkxNzUxY2Y1YTJhZWI2MzMyNDhiYzJjYmJlYTY2NWY4Mjg0MGU0OTQ4NQ%3D%3D%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22%22%7D%2C%22version%22%3A%221.1.0%22%7D; Path=/; Domain=kompas.cloud; Max-Age=21600"
												},
												{
													"key": "set-cookie",
													"value": "kompas._token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuQ0xldFlAMXNlY21haWwuY29tIiwiaWQiOiI1ZjMzOTBhZi0xNzJlLTQ1NzItODMyOS1hZTU4OGI2NGYwNDYiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzgzMTI3MSwiaWF0IjoxNjIzODMwMzcxLCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.T9wynJBKDhPpolYwxTw4ranuHGwSj4RVZOEngHAC-bswUb4exXItipb1-F81KHLA0WFibtGNa0C-InTBMpl_JZXNb9mUvSnD4VU65t9g-0-5nD9bPva7k6J0Dg9RpLSfuu4zMSUykts-6gTQGFCt6OAl0fVLu6bbFT5uJ_lu5o4CBrM; Path=/; Domain=kompas.cloud; Max-Age=900"
												},
												{
													"key": "set-cookie",
													"value": "kompas._token_refresh=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkNMZXRZQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzkxNjc3MSwic3ViIjoxfQ.IJhjSVfnYjJbIDVxRoTMIcSFta_FRSiJTZ0YZxJjOSlyRojDoLNh8p4noPECNPI9O51IcYPpIf9KkwcIDh9rN5UV63Qq082r7LrgxMlRjWzXc3Y4vJPRhtujP568j_zV7SF5pMpH9XeOZweyJjp0nbXcslIGycDd8PRHnysKxy9OMok; Path=/; Domain=kompas.cloud; Max-Age=21600"
												},
												{
													"key": "X-Cloud-Trace-Context",
													"value": "16812f2da853d779ffb5c06f498dfde5;o=1"
												},
												{
													"key": "Date",
													"value": "Wed, 16 Jun 2021 07:59:32 GMT"
												},
												{
													"key": "Server",
													"value": "Google Frontend"
												},
												{
													"key": "Content-Length",
													"value": "1132"
												},
												{
													"key": "Expires",
													"value": "Wed, 16 Jun 2021 07:59:32 GMT"
												},
												{
													"key": "Cache-Control",
													"value": "private"
												},
												{
													"key": "Alt-Svc",
													"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
												}
											],
											"cookie": [],
											"body": "{\n    \"accessToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuQ0xldFlAMXNlY21haWwuY29tIiwiaWQiOiI1ZjMzOTBhZi0xNzJlLTQ1NzItODMyOS1hZTU4OGI2NGYwNDYiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzgzMTI3MSwiaWF0IjoxNjIzODMwMzcxLCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.T9wynJBKDhPpolYwxTw4ranuHGwSj4RVZOEngHAC-bswUb4exXItipb1-F81KHLA0WFibtGNa0C-InTBMpl_JZXNb9mUvSnD4VU65t9g-0-5nD9bPva7k6J0Dg9RpLSfuu4zMSUykts-6gTQGFCt6OAl0fVLu6bbFT5uJ_lu5o4CBrM\",\n    \"data\": {\n        \"email\": \"testsdet.CLetY@1secmail.com\",\n        \"name\": \"sdet name gLkonuw\",\n        \"lastName\": \"KFfHiLZw\",\n        \"password\": \"@@AsD1223!!PgpqFIamY\",\n        \"google\": \"\",\n        \"facebook\": \"\",\n        \"apple\": {\n            \"email\": \"\",\n            \"token\": \"\"\n        },\n        \"docReferrer\": \"\"\n    },\n    \"docReferrer\": \"\",\n    \"error\": false,\n    \"message\": \"Pengguna telah berhasil didaftarkan.\",\n    \"passwordCheck\": \"Password kuat\",\n    \"refreshToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkNMZXRZQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzkxNjc3MSwic3ViIjoxfQ.IJhjSVfnYjJbIDVxRoTMIcSFta_FRSiJTZ0YZxJjOSlyRojDoLNh8p4noPECNPI9O51IcYPpIf9KkwcIDh9rN5UV63Qq082r7LrgxMlRjWzXc3Y4vJPRhtujP568j_zV7SF5pMpH9XeOZweyJjp0nbXcslIGycDd8PRHnysKxy9OMok\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Login fail 4x",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"email = pm.environment.get(\"email\");\r",
											"pass = \"password_salah\";\r",
											"\r",
											"//login salah sebanyak 4x dari pre-script\r",
											"//login salah ke 5 akan terblokir (login ke 5 bkn dari pre-script, tapi dari URL UI diatas)\r",
											"var myVar = setInterval(hitLogin, 5000);\r",
											"counter = 0;\r",
											"function hitLogin(){\r",
											"pm.sendRequest({\r",
											"    url: 'https://go-oauth2-dev-jp2wsmfbfq-uc.a.run.app/api/v1/login',\r",
											"    method: 'POST',\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({ email: email,\r",
											"                              password: pass })\r",
											"    }\r",
											"}, function (err, res) {\r",
											"    console.log(res);\r",
											"});\r",
											"counter = counter + 1;\r",
											"if(counter >=4){\r",
											"    clearInterval(myVar);\r",
											"}\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"User fail login 5th after fail login 4x\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(401);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.eql(\"Gagal masuk lebih dari 5 kali.\");\r",
											"    pm.expect(jsonData.data.loginBlocked).to.be.true;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"password_salah\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/login",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": [
								{
									"name": "2.Login With Wrong Password max 4x",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"password_salah\"\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "bd142c0d994785205253869273f16e00"
										},
										{
											"key": "Date",
											"value": "Mon, 14 Jun 2021 15:32:21 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "76"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": true,\n    \"message\": \"gagal masuk lebih dari 5 kali\",\n    \"timeRemaining\": 299\n}"
								}
							]
						}
					]
				},
				{
					"name": "Set New Password",
					"item": [
						{
							"name": "TestSetup",
							"item": [
								{
									"name": "Register",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Set global email, pass, accessToken\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.environment.set(\"email\",jsonData.data.data.email)\r",
													"    pm.environment.set(\"password\",jsonData.data.data.password)\r",
													"    pm.environment.set(\"aceessToken\",jsonData.data.accessToken)\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function makeid(length) {\r",
													"    var result           = '';\r",
													"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
													"    var charactersLength = characters.length;\r",
													"    for ( var i = 0; i < length; i++ ) {\r",
													"      result += characters.charAt(Math.floor(Math.random() * \r",
													" charactersLength));\r",
													"   }\r",
													"   return result;\r",
													"}\r",
													"\r",
													"generated_email = makeid(5);\r",
													"generated_name = makeid(7);\r",
													"generated_pass =  \"@@AsD1223!!\" + makeid(9);\r",
													"generated_lastname = makeid(8);\r",
													"pm.environment.set(\"email\", \"testsdet.\"+ generated_email+\"@1secmail.com\");\r",
													"pm.environment.set(\"password\",generated_pass);\r",
													"pm.environment.set(\"firstname\", \"sdet name \"+ generated_name);\r",
													"pm.environment.set(\"lastname\",generated_lastname);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstname\": \"{{firstname}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"\",\n        \"token\": \"\"\n    },\n    \"facebook\": \"\",\n    \"google\": \"\",\n    \"lastName\": \"{{lastname}}\"\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/register",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"register"
											]
										},
										"description": "Register User Using Email"
									},
									"response": [
										{
											"name": "1. Register",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"\",\n        \"token\": \"\"\n    },\n    \"facebook\": \"\",\n    \"google\": \"\",\n    \"lastName\": \"{{lastname}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"register"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "access-control-allow-credentials",
													"value": "true"
												},
												{
													"key": "access-control-allow-headers",
													"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
												},
												{
													"key": "access-control-allow-methods",
													"value": "GET,POST"
												},
												{
													"key": "access-control-allow-origin",
													"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
												},
												{
													"key": "content-type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "set-cookie",
													"value": "kantormu=%7B%22user%22%3A%7B%22created_at%22%3A%22%22%2C%22first_name%22%3A%22sdet+name+gLkonuw%22%2C%22guid%22%3A%225f3390af-172e-4572-8329-ae588b64f046%22%2C%22id%22%3A%22dUFFdlNVbWN6bnhURnBwYTMzMzIzMjM5NjYzMTMyMzEzNjMxMzE2MjMxNjMzNjMzZjIxY2QzNmQ2NzE0ZjcwYzczZjc1NmVjM2NlYTIxYzBlZjQzMzQ2MmY1M2VmOWMxNjYyNTk4NjAwN2U0M2JkMDYzMzU2MTMxMzQzNzMyMzQ2NTM3NjUzMDM2MzAzNDMwZjc5YjMwMTQwYWU1NmFiMTliZTJmNTkxNzUxY2Y1YTJhZWI2MzMyNDhiYzJjYmJlYTY2NWY4Mjg0MGU0OTQ4NQ%3D%3D%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22%22%7D%2C%22version%22%3A%221.1.0%22%7D; Path=/; Domain=kompas.cloud; Max-Age=21600"
												},
												{
													"key": "set-cookie",
													"value": "kompas._token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuQ0xldFlAMXNlY21haWwuY29tIiwiaWQiOiI1ZjMzOTBhZi0xNzJlLTQ1NzItODMyOS1hZTU4OGI2NGYwNDYiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzgzMTI3MSwiaWF0IjoxNjIzODMwMzcxLCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.T9wynJBKDhPpolYwxTw4ranuHGwSj4RVZOEngHAC-bswUb4exXItipb1-F81KHLA0WFibtGNa0C-InTBMpl_JZXNb9mUvSnD4VU65t9g-0-5nD9bPva7k6J0Dg9RpLSfuu4zMSUykts-6gTQGFCt6OAl0fVLu6bbFT5uJ_lu5o4CBrM; Path=/; Domain=kompas.cloud; Max-Age=900"
												},
												{
													"key": "set-cookie",
													"value": "kompas._token_refresh=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkNMZXRZQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzkxNjc3MSwic3ViIjoxfQ.IJhjSVfnYjJbIDVxRoTMIcSFta_FRSiJTZ0YZxJjOSlyRojDoLNh8p4noPECNPI9O51IcYPpIf9KkwcIDh9rN5UV63Qq082r7LrgxMlRjWzXc3Y4vJPRhtujP568j_zV7SF5pMpH9XeOZweyJjp0nbXcslIGycDd8PRHnysKxy9OMok; Path=/; Domain=kompas.cloud; Max-Age=21600"
												},
												{
													"key": "X-Cloud-Trace-Context",
													"value": "16812f2da853d779ffb5c06f498dfde5;o=1"
												},
												{
													"key": "Date",
													"value": "Wed, 16 Jun 2021 07:59:32 GMT"
												},
												{
													"key": "Server",
													"value": "Google Frontend"
												},
												{
													"key": "Content-Length",
													"value": "1132"
												},
												{
													"key": "Expires",
													"value": "Wed, 16 Jun 2021 07:59:32 GMT"
												},
												{
													"key": "Cache-Control",
													"value": "private"
												},
												{
													"key": "Alt-Svc",
													"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
												}
											],
											"cookie": [],
											"body": "{\n    \"accessToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuQ0xldFlAMXNlY21haWwuY29tIiwiaWQiOiI1ZjMzOTBhZi0xNzJlLTQ1NzItODMyOS1hZTU4OGI2NGYwNDYiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzgzMTI3MSwiaWF0IjoxNjIzODMwMzcxLCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.T9wynJBKDhPpolYwxTw4ranuHGwSj4RVZOEngHAC-bswUb4exXItipb1-F81KHLA0WFibtGNa0C-InTBMpl_JZXNb9mUvSnD4VU65t9g-0-5nD9bPva7k6J0Dg9RpLSfuu4zMSUykts-6gTQGFCt6OAl0fVLu6bbFT5uJ_lu5o4CBrM\",\n    \"data\": {\n        \"email\": \"testsdet.CLetY@1secmail.com\",\n        \"name\": \"sdet name gLkonuw\",\n        \"lastName\": \"KFfHiLZw\",\n        \"password\": \"@@AsD1223!!PgpqFIamY\",\n        \"google\": \"\",\n        \"facebook\": \"\",\n        \"apple\": {\n            \"email\": \"\",\n            \"token\": \"\"\n        },\n        \"docReferrer\": \"\"\n    },\n    \"docReferrer\": \"\",\n    \"error\": false,\n    \"message\": \"Pengguna telah berhasil didaftarkan.\",\n    \"passwordCheck\": \"Password kuat\",\n    \"refreshToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkNMZXRZQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzkxNjc3MSwic3ViIjoxfQ.IJhjSVfnYjJbIDVxRoTMIcSFta_FRSiJTZ0YZxJjOSlyRojDoLNh8p4noPECNPI9O51IcYPpIf9KkwcIDh9rN5UV63Qq082r7LrgxMlRjWzXc3Y4vJPRhtujP568j_zV7SF5pMpH9XeOZweyJjp0nbXcslIGycDd8PRHnysKxy9OMok\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Set new password with all valid params",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'abcdefghij';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"generated_pass = \"@123\"+makeid(6);\r",
											"pm.environment.set(\"password\", generated_pass);\r",
											"\r",
											"var myVar = setInterval(delaySetNewPassword, 5000);\r",
											"function delaySetNewPassword(){\r",
											"     clearInterval(myVar);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User successfully set new password with all valid params\", function (){\r",
											"    //check response\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.response.to.not.be.error;\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.be.exist\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/new-password",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"new-password"
									]
								}
							},
							"response": [
								{
									"name": "Set new password with all valid params",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/new-password",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"new-password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://account.kompas.cloud"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "7863f6e4805d24e00a6c0b6a5f5317fc;o=1"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Jul 2021 03:28:49 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "75"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 200,\n    \"message\": \"ubah kata sandi sukses\",\n    \"data\": null\n}"
								}
							]
						},
						{
							"name": "Set new password with all empty params",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error set new password with all empty params\", function () {\r",
											"    // check response json\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.response.to.be.error;\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.be.exist\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/new-password",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"new-password"
									]
								}
							},
							"response": [
								{
									"name": "Set new password with all empty params",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\"\r\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/new-password",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"new-password"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://account.kompas.cloud"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "46de19e614f48f0e8d6e782026349a56;o=1"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Jul 2021 03:29:06 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "92"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"Email wajib diisi. Password wajib diisi. \",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Set new password with empty password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error set new password with empty password\", function () {\r",
											"    // check response json\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.response.to.be.error;\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.be.exist\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/new-password",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"new-password"
									]
								}
							},
							"response": [
								{
									"name": "Set new password with empty password",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"\"\r\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/new-password",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"new-password"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://account.kompas.cloud"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "c562f62dd03fce368f15781e08cbc1e7;o=1"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Jul 2021 03:29:21 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "73"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"Password wajib diisi. \",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Set new password with pass less than 6",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"generated_pass = \"@!\"+makeid(2);\r",
											"pm.environment.set(\"password\", generated_pass);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error set new password with pass less than 6 char\", function () {\r",
											"    // check response json\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.response.to.be.error;\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.be.exist\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/new-password",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"new-password"
									]
								}
							},
							"response": [
								{
									"name": "Set new password with pass less than 6",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/new-password",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"new-password"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://account.kompas.cloud"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "99a4580d6f0a4f131eb584a861b309fa"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Jul 2021 03:29:27 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "65"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"password lemah\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Set new password with pass all lower case",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'abcdefghijklmnopqrstuvwxyz';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"generated_pass = makeid(6);\r",
											"pm.environment.set(\"password\", generated_pass);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error set new password with pass all lower case\", function () {\r",
											"    // check response json\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.response.to.be.error;\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.be.exist\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/new-password",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"new-password"
									]
								}
							},
							"response": [
								{
									"name": "Set new password with pass all lower case",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/new-password",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"new-password"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://account.kompas.cloud"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "1ef3e73a21e860c8562deea24d1760d1;o=1"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Jul 2021 03:29:40 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "65"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"password lemah\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Set new password with pass all upper case",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQ';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"generated_pass = makeid(6);\r",
											"pm.environment.set(\"password\", generated_pass);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error set new password with pass all upper case\", function () {\r",
											"    // check response json\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.response.to.be.error;\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.be.exist\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/new-password",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"new-password"
									]
								}
							},
							"response": [
								{
									"name": "Set new password with pass all upper case",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/new-password",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"new-password"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://account.kompas.cloud"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "d10f1a4382467cd5965280c9a4c1139b"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Jul 2021 03:29:49 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "65"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"password lemah\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Set new password with pass all numeric",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = '0123456789';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"generated_pass = makeid(6);\r",
											"pm.environment.set(\"password\", generated_pass);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error set new password with pass all numeric\", function () {\r",
											"    // check response json\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.response.to.be.error;\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.be.exist\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/new-password",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"new-password"
									]
								}
							},
							"response": [
								{
									"name": "Set new password with pass all numeric",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/new-password",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"new-password"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://account.kompas.cloud"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "905e84b15314932af9127bfc8e5deeb9;o=1"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Jul 2021 03:29:56 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "65"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"password lemah\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Set new password with pass all special char",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = '!@#$%^&*()';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"generated_pass = makeid(6);\r",
											"pm.environment.set(\"password\", generated_pass);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error set new password with pass all special char\", function () {\r",
											"    // check response json\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.response.to.be.error;\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.be.exist\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/new-password",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"new-password"
									]
								}
							},
							"response": [
								{
									"name": "Set new password with pass all special char",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/new-password",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"new-password"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://account.kompas.cloud"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "f9e9bbbbea2b5cfd36b56fa443543bc7"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Jul 2021 03:30:03 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "65"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"password lemah\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Set new password with pass all lower and upper case",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'abcdefghij';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"generated_pass = \"ABC\"+makeid(6);\r",
											"pm.environment.set(\"password\", generated_pass);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error set new password with pass all lower and upper case\", function () {\r",
											"    // check response json\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.response.to.be.error;\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.be.exist\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/new-password",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"new-password"
									]
								}
							},
							"response": [
								{
									"name": "Set new password with pass all lower and upper case",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/new-password",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"new-password"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://account.kompas.cloud"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "145fa5088eefa632a539e8c3d479f39f;o=1"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Jul 2021 03:30:10 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "65"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"password lemah\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Set new password with empty email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"generated_pass = \"@123\"+makeid(9);\r",
											"pm.environment.set(\"password\", generated_pass);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error set new password with empty email\", function () {\r",
											"    // check response json\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.response.to.be.error;\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.be.exist\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"{{password}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/new-password",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"new-password"
									]
								}
							},
							"response": [
								{
									"name": "Set new password with empty email",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"{{password}}\"\r\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/new-password",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"new-password"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://account.kompas.cloud"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "4e9a6eff2c5099fb44c1d0873ea713d1"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Jul 2021 03:30:17 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "70"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"Email wajib diisi. \",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Set new password with invalid email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"generated_pass = \"@123\"+makeid(9);\r",
											"pm.environment.set(\"password\", generated_pass);\r",
											"pm.environment.set(\"email\", 'rbnsitohang10@gmail');\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error set new password with invalid email\", function () {\r",
											"    // check response json\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.response.to.be.error;\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.be.exist\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/new-password",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"new-password"
									]
								}
							},
							"response": [
								{
									"name": "Set new password with invalid email",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/new-password",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"new-password"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://account.kompas.cloud"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "9c82443dd8554a1e7b8487c51303fc20;o=1"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Jul 2021 03:30:24 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "95"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"Email harus berupa alamat email yang valid. \",\n    \"data\": []\n}"
								}
							]
						}
					]
				},
				{
					"name": "User Verification",
					"item": [
						{
							"name": "Verify account with registered email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User successfully verify account with registered email\", function () {\r",
											"    //check response\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.response.to.not.be.error;\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(jsonData.error).to.be.false;\r",
											"    pm.expect(jsonData.message).to.be.exist\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{GLOBAL_EMAIL}}\"\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/user-verification",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"user-verification"
									]
								},
								"description": "User Verification Page"
							},
							"response": [
								{
									"name": "Verify account with registered email",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{GLOBAL_EMAIL}}\"\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/user-verification",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"user-verification"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://account.kompas.cloud"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "6c7b9b37494a7028c8f2a7d7026ca245"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Jul 2021 03:30:59 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "65"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": false,\n    \"message\": \"Pengguna telah berhasil diverifikasi.\"\n}"
								}
							]
						},
						{
							"name": "Verify account with invalid email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"\r",
											"generated_email = makeid(25);\r",
											"pm.environment.set(\"email\",\"testsdet.\" + generated_email+\"1secmail.com\");\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error verify account with invalid email\", function () {\r",
											"    // check response json\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.response.to.be.error;\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.be.exist\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\"\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/user-verification",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"user-verification"
									]
								},
								"description": "User Verification Page"
							},
							"response": [
								{
									"name": "Verify account with invalid email",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\"\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/user-verification",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"user-verification"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://account.kompas.cloud"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "0eab47fc0ac529366918e9e8a2ef1378;o=1"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Jul 2021 03:31:06 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "95"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"Email harus berupa alamat email yang valid. \",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Verify account with empty email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"email\", '');\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error verify account with empty email\", function () {\r",
											"    // check response json\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.response.to.be.error;\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.be.exist\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\"\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/user-verification",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"user-verification"
									]
								},
								"description": "User Verification Page"
							},
							"response": [
								{
									"name": "Verify account with empty email",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\"\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/user-verification",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"user-verification"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://account.kompas.cloud"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "872d57619fe79af32fbc5df7882b22d0"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Jul 2021 03:31:14 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "70"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"Email wajib diisi. \",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Verify account with unregistered email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function makeid(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"\r",
											"generated_email = makeid(25);\r",
											"pm.environment.set(\"email\",\"testsdet.\" + generated_email+\"@1secmail.com\");\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"User get error verify account with unregisterd email\", function () {\r",
											"    // check response json\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.response.to.be.error;\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.be.exist\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\"\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/user-verification",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"user-verification"
									]
								},
								"description": "User Verification Page"
							},
							"response": [
								{
									"name": "Verify account with unregistered email",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\"\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/user-verification",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"user-verification"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://account.kompas.cloud"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "41f8abd39ff109d6d2c8ada5850e1ac6;o=1"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Jul 2021 03:31:20 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "72"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"email tidak ditemukan\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "User get error verify account with verify email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"User get error verify account with unregisterd email\", function () {\r",
											"    // check response json\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.response.to.be.error;\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.be.exist\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{GLOBAL_EMAIL}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/user-verification",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"user-verification"
									]
								}
							},
							"response": [
								{
									"name": "User get error verify account with verify email",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{GLOBAL_EMAIL}}\"\r\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/user-verification",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"user-verification"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET,POST"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://account.kompas.cloud"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "X-Cloud-Trace-Context",
											"value": "f4c142a19e5f92891163988cd0a4595a"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Jul 2021 07:10:54 GMT"
										},
										{
											"key": "Server",
											"value": "Google Frontend"
										},
										{
											"key": "Content-Length",
											"value": "79"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"code\": 400,\n    \"message\": \"pengguna sudah terverifikasi\",\n    \"data\": []\n}"
								}
							]
						}
					]
				},
				{
					"name": "Cancel Register",
					"item": [
						{
							"name": "TestSetup",
							"item": [
								{
									"name": "Get JS RSASign",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.globals.set(\"GLOBAL_JSRASIGN-JS\",responseBody);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true,
										"disableUrlEncoding": false,
										"strictSSL": true,
										"followRedirects": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js",
											"protocol": "http",
											"host": [
												"kjur",
												"github",
												"io"
											],
											"path": [
												"jsrsasign",
												"jsrsasign-latest-all-min.js"
											]
										}
									},
									"response": []
								},
								{
									"name": "Register",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function makeid(length) {\r",
													"    var result           = '';\r",
													"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
													"    var charactersLength = characters.length;\r",
													"    for ( var i = 0; i < length; i++ ) {\r",
													"      result += characters.charAt(Math.floor(Math.random() * \r",
													" charactersLength));\r",
													"   }\r",
													"   return result;\r",
													"}\r",
													"\r",
													"generated_email = makeid(5);\r",
													"generated_name = makeid(7);\r",
													"generated_pass =  \"@@AsD1223!!\" + makeid(9);\r",
													"generated_lastname = makeid(8);\r",
													"pm.environment.set(\"email\", \"testsdet.\"+ generated_email+\"@1secmail.com\");\r",
													"pm.environment.set(\"password\",generated_pass);\r",
													"pm.environment.set(\"firstname\", \"sdet name \"+ generated_name);\r",
													"pm.environment.set(\"lastname\",generated_lastname);\r",
													"\r",
													"\r",
													"\r",
													"//Pembuatan token batal Registrasi\r",
													"var navigator = {};\r",
													"var window = {};\r",
													"eval(pm.globals.get(\"GLOBAL_JSRASIGN-JS\"));\r",
													"\r",
													"var header = {\r",
													"    \"alg\" : \"RS256\", \"typ\" : \"JWT\"\r",
													"    };\r",
													"\r",
													"var date = new Date();\r",
													"var time = date.getTime();\r",
													"pm.environment.set(\"expired\",time);\r",
													"var data= {\r",
													"\t'email': pm.environment.get(\"email\"),\r",
													"\t'exp': pm.environment.get(\"expired\"),\r",
													"\t'sub':  \"1\"\r",
													"};\r",
													"var privateKey = \"-----BEGIN RSA PRIVATE KEY-----\\r\\nMIICaAIBAAKBhAC9qT41iK9icp6XYAJy4IBh5TZKNV80VoOCCqRLV+E6QLbCzLte\\r\\nbE97g71UgXpFrAytc\\/zU8hi2HWZYGFFSwQUiwEh+dsbtF9\\/sg7jC9b3T5rAi5iWN\\r\\nZL8CVvbUmD5vSSD09m28Xksb1\\/FgdbvayEMjAiM+Jx7FTzJQI5OxQtY372mk5QID\\r\\nAQABAoGDJdF1gh87OZo5XV3bnyR89QhLhwiVb05A8tFEaXGgi4kT6EwCoJVgU\\/S0\\r\\n8ADRbMsdzAhwxdVwb\\/\\/0xGQ08xdh+sfvK8TzcZM8eCUm5zNtyvsxAG8unDjIO4lb\\r\\nwTpCKHY8FT48LLkmXaUrdZwfp4r3R7xdjO3f4ZYrUEZnm2rCeIhI4oECQg6uhAlp\\r\\nYc79ThMplV9OzEbRVKgclFFX7e9YrGYOsijoXA0JAkWYiRL3eYqj5xng93JA2axh\\r\\n39J7szVg5x8lSTvcPQJCDOsO4v\\/HqC4ZsPROU7zMIXhuU0uG6xzcs5bCU6lgu80W\\r\\nKGFyr2tq5lkqKhcXuOqFdIyN\\/8JdzeB4\\/YEhONmMry3JAkIKRmSt2YzUOj7r9kxN\\r\\n2W3pmhLvXKEIlMs2mQ5+loZlTsktbkKixnAYUA5F0xOn7uP+mBg\\/JnhobJ4tG1Zl\\r\\nW8j3FdkCQUKbwia0tsZ27gF9smITGnl6f2L+DK5AI73dnCHFOQMgdx+\\/V5kqRgl1\\r\\nt\\/NPHwJaPca29XfMu+DRjwmSybpYAw9BAkIIxqXWIEoEbZWILAHWNRM4JuqMNNVa\\r\\nzBOW6auHaidIhDeb6as6QRidDLdLWO3sTcbOAfoj653YecU1bxBAlaB6Nc4=\\r\\n-----END RSA PRIVATE KEY-----\";\r",
													"pm.environment.set(\"jwt_private_key\",privateKey)\r",
													"var sHeader = JSON.stringify(header);\r",
													"var sPayload = JSON.stringify(data);\r",
													"var jwt_token_cancel= KJUR.jws.JWS.sign(header.alg, sHeader, sPayload, privateKey);\r",
													"pm.environment.set(\"jwt_token_cancel\",jwt_token_cancel)\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Set env email, password, accesstoken\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.environment.set(\"email\",jsonData.data.data.email)\r",
													"    pm.environment.set(\"password\",jsonData.data.data.password)\r",
													"    pm.environment.set(\"accessToken\",jsonData.data.accessToken)\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstname\": \"{{firstname}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"\",\n        \"token\": \"\"\n    },\n    \"facebook\": \"\",\n    \"google\": \"\",\n    \"lastName\": \"{{lastname}}\"\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/register",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"register"
											]
										},
										"description": "Register User Using Email"
									},
									"response": [
										{
											"name": "1. Register",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"\",\n        \"token\": \"\"\n    },\n    \"facebook\": \"\",\n    \"google\": \"\",\n    \"lastName\": \"{{lastname}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"register"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "access-control-allow-credentials",
													"value": "true"
												},
												{
													"key": "access-control-allow-headers",
													"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
												},
												{
													"key": "access-control-allow-methods",
													"value": "GET,POST"
												},
												{
													"key": "access-control-allow-origin",
													"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
												},
												{
													"key": "content-type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "set-cookie",
													"value": "kantormu=%7B%22user%22%3A%7B%22created_at%22%3A%22%22%2C%22first_name%22%3A%22sdet+name+gLkonuw%22%2C%22guid%22%3A%225f3390af-172e-4572-8329-ae588b64f046%22%2C%22id%22%3A%22dUFFdlNVbWN6bnhURnBwYTMzMzIzMjM5NjYzMTMyMzEzNjMxMzE2MjMxNjMzNjMzZjIxY2QzNmQ2NzE0ZjcwYzczZjc1NmVjM2NlYTIxYzBlZjQzMzQ2MmY1M2VmOWMxNjYyNTk4NjAwN2U0M2JkMDYzMzU2MTMxMzQzNzMyMzQ2NTM3NjUzMDM2MzAzNDMwZjc5YjMwMTQwYWU1NmFiMTliZTJmNTkxNzUxY2Y1YTJhZWI2MzMyNDhiYzJjYmJlYTY2NWY4Mjg0MGU0OTQ4NQ%3D%3D%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22%22%7D%2C%22version%22%3A%221.1.0%22%7D; Path=/; Domain=kompas.cloud; Max-Age=21600"
												},
												{
													"key": "set-cookie",
													"value": "kompas._token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuQ0xldFlAMXNlY21haWwuY29tIiwiaWQiOiI1ZjMzOTBhZi0xNzJlLTQ1NzItODMyOS1hZTU4OGI2NGYwNDYiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzgzMTI3MSwiaWF0IjoxNjIzODMwMzcxLCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.T9wynJBKDhPpolYwxTw4ranuHGwSj4RVZOEngHAC-bswUb4exXItipb1-F81KHLA0WFibtGNa0C-InTBMpl_JZXNb9mUvSnD4VU65t9g-0-5nD9bPva7k6J0Dg9RpLSfuu4zMSUykts-6gTQGFCt6OAl0fVLu6bbFT5uJ_lu5o4CBrM; Path=/; Domain=kompas.cloud; Max-Age=900"
												},
												{
													"key": "set-cookie",
													"value": "kompas._token_refresh=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkNMZXRZQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzkxNjc3MSwic3ViIjoxfQ.IJhjSVfnYjJbIDVxRoTMIcSFta_FRSiJTZ0YZxJjOSlyRojDoLNh8p4noPECNPI9O51IcYPpIf9KkwcIDh9rN5UV63Qq082r7LrgxMlRjWzXc3Y4vJPRhtujP568j_zV7SF5pMpH9XeOZweyJjp0nbXcslIGycDd8PRHnysKxy9OMok; Path=/; Domain=kompas.cloud; Max-Age=21600"
												},
												{
													"key": "X-Cloud-Trace-Context",
													"value": "16812f2da853d779ffb5c06f498dfde5;o=1"
												},
												{
													"key": "Date",
													"value": "Wed, 16 Jun 2021 07:59:32 GMT"
												},
												{
													"key": "Server",
													"value": "Google Frontend"
												},
												{
													"key": "Content-Length",
													"value": "1132"
												},
												{
													"key": "Expires",
													"value": "Wed, 16 Jun 2021 07:59:32 GMT"
												},
												{
													"key": "Cache-Control",
													"value": "private"
												},
												{
													"key": "Alt-Svc",
													"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
												}
											],
											"cookie": [],
											"body": "{\n    \"accessToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuQ0xldFlAMXNlY21haWwuY29tIiwiaWQiOiI1ZjMzOTBhZi0xNzJlLTQ1NzItODMyOS1hZTU4OGI2NGYwNDYiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzgzMTI3MSwiaWF0IjoxNjIzODMwMzcxLCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.T9wynJBKDhPpolYwxTw4ranuHGwSj4RVZOEngHAC-bswUb4exXItipb1-F81KHLA0WFibtGNa0C-InTBMpl_JZXNb9mUvSnD4VU65t9g-0-5nD9bPva7k6J0Dg9RpLSfuu4zMSUykts-6gTQGFCt6OAl0fVLu6bbFT5uJ_lu5o4CBrM\",\n    \"data\": {\n        \"email\": \"testsdet.CLetY@1secmail.com\",\n        \"name\": \"sdet name gLkonuw\",\n        \"lastName\": \"KFfHiLZw\",\n        \"password\": \"@@AsD1223!!PgpqFIamY\",\n        \"google\": \"\",\n        \"facebook\": \"\",\n        \"apple\": {\n            \"email\": \"\",\n            \"token\": \"\"\n        },\n        \"docReferrer\": \"\"\n    },\n    \"docReferrer\": \"\",\n    \"error\": false,\n    \"message\": \"Pengguna telah berhasil didaftarkan.\",\n    \"passwordCheck\": \"Password kuat\",\n    \"refreshToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkNMZXRZQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzkxNjc3MSwic3ViIjoxfQ.IJhjSVfnYjJbIDVxRoTMIcSFta_FRSiJTZ0YZxJjOSlyRojDoLNh8p4noPECNPI9O51IcYPpIf9KkwcIDh9rN5UV63Qq082r7LrgxMlRjWzXc3Y4vJPRhtujP568j_zV7SF5pMpH9XeOZweyJjp0nbXcslIGycDd8PRHnysKxy9OMok\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Cancel Registration With Valid Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var myVar = setInterval(delayValidToken, 5000);\r",
											"function delayValidToken(){\r",
											"     clearInterval(myVar);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User Successfully Delete Account\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var email = pm.environment.get(\"email\");\r",
											"    pm.expect(jsonData.email).to.eql(email);\r",
											"    pm.expect(jsonData.message).to.eql(\"successfully delete user\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								},
								"strictSSL": true,
								"followRedirects": true,
								"disableUrlEncoding": false
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\" : \"{{jwt_token_cancel}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/cancel-register",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"cancel-register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel Registration With Expired Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var myVar = setInterval(delayExpiredToken, 5000);\r",
											"function delayExpiredToken(){\r",
											"     clearInterval(myVar);\r",
											"}\r",
											"var Expired_token = \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RpbmczLmtvbXBhc0BnbWFpbC5jb20iLCJleHAiOjE2MjM5MjY1NzcsInN1YiI6MX0.ZBMm0Ojel4i6fFFAc0qZysekLXrgI_QL8egqLh0nzBIubTe4sV98bKfbPuEISlgwyzeFNL5m9EXWtZAZEBA97N6RTgwYFCZPp2WIIhstDGj-pxZSRqieZPCNRAc-JvJxCh8Z7btpusb0VHOU5CYUuIZ6qr5gcKTnNNPtqaGvkKGyYSc\"\r",
											"pm.environment.set(\"jwt_token_cancel\",Expired_token)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error with Expired Token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(500\r",
											"    );\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.eql(\"Gagal claim access token\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								},
								"strictSSL": true,
								"followRedirects": true,
								"disableUrlEncoding": false
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\" : \"{{jwt_token_cancel}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/cancel-register",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"cancel-register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel Registration With Invalid Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var myVar = setInterval(delayInvalidToken, 5000);\r",
											"function delayInvalidToken(){\r",
											"     clearInterval(myVar);\r",
											"}\r",
											"\r",
											"var jwt_token_cancel = pm.environment.get(\"accessToken\");\r",
											"pm.environment.set (\"jwt_token_cancel\",jwt_token_cancel)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error with invalid Token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.eql(\"email tidak ditemukan\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								},
								"strictSSL": true,
								"followRedirects": true,
								"disableUrlEncoding": false
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\" : \"{{jwt_token_cancel}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/cancel-register",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"cancel-register"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Check Email Deleted",
					"item": [
						{
							"name": "TestSetup",
							"item": [
								{
									"name": "Get JS RSASign",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.globals.set(\"GLOBAL_JSRASIGN-JS\",responseBody);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true,
										"disableUrlEncoding": false,
										"strictSSL": true,
										"followRedirects": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js",
											"protocol": "http",
											"host": [
												"kjur",
												"github",
												"io"
											],
											"path": [
												"jsrsasign",
												"jsrsasign-latest-all-min.js"
											]
										}
									},
									"response": []
								},
								{
									"name": "Register",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function makeid(length) {\r",
													"    var result           = '';\r",
													"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
													"    var charactersLength = characters.length;\r",
													"    for ( var i = 0; i < length; i++ ) {\r",
													"      result += characters.charAt(Math.floor(Math.random() * \r",
													" charactersLength));\r",
													"   }\r",
													"   return result;\r",
													"}\r",
													"\r",
													"generated_email = makeid(5);\r",
													"generated_name = makeid(7);\r",
													"generated_pass =  \"@@AsD1223!!\" + makeid(9);\r",
													"generated_lastname = makeid(8);\r",
													"pm.environment.set(\"email\", \"testsdet.\"+ generated_email+\"@1secmail.com\");\r",
													"pm.environment.set(\"password\",generated_pass);\r",
													"pm.environment.set(\"firstname\", \"sdet name \"+ generated_name);\r",
													"pm.environment.set(\"lastname\",generated_lastname);\r",
													"\r",
													"\r",
													"\r",
													"//Pembuatan token batal Registrasi\r",
													"var navigator = {};\r",
													"var window = {};\r",
													"eval(pm.globals.get(\"GLOBAL_JSRASIGN-JS\"));\r",
													"\r",
													"var header = {\r",
													"    \"alg\" : \"RS256\", \"typ\" : \"JWT\"\r",
													"    };\r",
													"\r",
													"var date = new Date();\r",
													"var time = date.getTime();\r",
													"pm.environment.set(\"expired\",time);\r",
													"var data= {\r",
													"\t'email': pm.environment.get(\"email\"),\r",
													"\t'exp': pm.environment.get(\"expired\"),\r",
													"\t'sub':  \"1\"\r",
													"};\r",
													"var privateKey = \"-----BEGIN RSA PRIVATE KEY-----\\r\\nMIICaAIBAAKBhAC9qT41iK9icp6XYAJy4IBh5TZKNV80VoOCCqRLV+E6QLbCzLte\\r\\nbE97g71UgXpFrAytc\\/zU8hi2HWZYGFFSwQUiwEh+dsbtF9\\/sg7jC9b3T5rAi5iWN\\r\\nZL8CVvbUmD5vSSD09m28Xksb1\\/FgdbvayEMjAiM+Jx7FTzJQI5OxQtY372mk5QID\\r\\nAQABAoGDJdF1gh87OZo5XV3bnyR89QhLhwiVb05A8tFEaXGgi4kT6EwCoJVgU\\/S0\\r\\n8ADRbMsdzAhwxdVwb\\/\\/0xGQ08xdh+sfvK8TzcZM8eCUm5zNtyvsxAG8unDjIO4lb\\r\\nwTpCKHY8FT48LLkmXaUrdZwfp4r3R7xdjO3f4ZYrUEZnm2rCeIhI4oECQg6uhAlp\\r\\nYc79ThMplV9OzEbRVKgclFFX7e9YrGYOsijoXA0JAkWYiRL3eYqj5xng93JA2axh\\r\\n39J7szVg5x8lSTvcPQJCDOsO4v\\/HqC4ZsPROU7zMIXhuU0uG6xzcs5bCU6lgu80W\\r\\nKGFyr2tq5lkqKhcXuOqFdIyN\\/8JdzeB4\\/YEhONmMry3JAkIKRmSt2YzUOj7r9kxN\\r\\n2W3pmhLvXKEIlMs2mQ5+loZlTsktbkKixnAYUA5F0xOn7uP+mBg\\/JnhobJ4tG1Zl\\r\\nW8j3FdkCQUKbwia0tsZ27gF9smITGnl6f2L+DK5AI73dnCHFOQMgdx+\\/V5kqRgl1\\r\\nt\\/NPHwJaPca29XfMu+DRjwmSybpYAw9BAkIIxqXWIEoEbZWILAHWNRM4JuqMNNVa\\r\\nzBOW6auHaidIhDeb6as6QRidDLdLWO3sTcbOAfoj653YecU1bxBAlaB6Nc4=\\r\\n-----END RSA PRIVATE KEY-----\";\r",
													"pm.environment.set(\"jwt_private_key\",privateKey)\r",
													"var sHeader = JSON.stringify(header);\r",
													"var sPayload = JSON.stringify(data);\r",
													"var jwt_token_cancel= KJUR.jws.JWS.sign(header.alg, sHeader, sPayload, privateKey);\r",
													"pm.environment.set(\"jwt_token_cancel\",jwt_token_cancel)\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Set env email, password, accesstoken\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.environment.set(\"email\",jsonData.data.data.email)\r",
													"    pm.environment.set(\"password\",jsonData.data.data.password)\r",
													"    pm.environment.set(\"accessToken\",jsonData.data.accessToken)\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstname\": \"{{firstname}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"\",\n        \"token\": \"\"\n    },\n    \"facebook\": \"\",\n    \"google\": \"\",\n    \"lastName\": \"{{lastname}}\"\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/register",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"register"
											]
										},
										"description": "Register User Using Email"
									},
									"response": [
										{
											"name": "1. Register",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\",\n    \"apple\": {\n        \"email\": \"\",\n        \"token\": \"\"\n    },\n    \"facebook\": \"\",\n    \"google\": \"\",\n    \"lastName\": \"{{lastname}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"register"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "access-control-allow-credentials",
													"value": "true"
												},
												{
													"key": "access-control-allow-headers",
													"value": "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With"
												},
												{
													"key": "access-control-allow-methods",
													"value": "GET,POST"
												},
												{
													"key": "access-control-allow-origin",
													"value": "https://nuxt-oauth2-dev-jp2wsmfbfq-uc.a.run.app"
												},
												{
													"key": "content-type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "set-cookie",
													"value": "kantormu=%7B%22user%22%3A%7B%22created_at%22%3A%22%22%2C%22first_name%22%3A%22sdet+name+gLkonuw%22%2C%22guid%22%3A%225f3390af-172e-4572-8329-ae588b64f046%22%2C%22id%22%3A%22dUFFdlNVbWN6bnhURnBwYTMzMzIzMjM5NjYzMTMyMzEzNjMxMzE2MjMxNjMzNjMzZjIxY2QzNmQ2NzE0ZjcwYzczZjc1NmVjM2NlYTIxYzBlZjQzMzQ2MmY1M2VmOWMxNjYyNTk4NjAwN2U0M2JkMDYzMzU2MTMxMzQzNzMyMzQ2NTM3NjUzMDM2MzAzNDMwZjc5YjMwMTQwYWU1NmFiMTliZTJmNTkxNzUxY2Y1YTJhZWI2MzMyNDhiYzJjYmJlYTY2NWY4Mjg0MGU0OTQ4NQ%3D%3D%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22%22%7D%2C%22version%22%3A%221.1.0%22%7D; Path=/; Domain=kompas.cloud; Max-Age=21600"
												},
												{
													"key": "set-cookie",
													"value": "kompas._token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuQ0xldFlAMXNlY21haWwuY29tIiwiaWQiOiI1ZjMzOTBhZi0xNzJlLTQ1NzItODMyOS1hZTU4OGI2NGYwNDYiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzgzMTI3MSwiaWF0IjoxNjIzODMwMzcxLCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.T9wynJBKDhPpolYwxTw4ranuHGwSj4RVZOEngHAC-bswUb4exXItipb1-F81KHLA0WFibtGNa0C-InTBMpl_JZXNb9mUvSnD4VU65t9g-0-5nD9bPva7k6J0Dg9RpLSfuu4zMSUykts-6gTQGFCt6OAl0fVLu6bbFT5uJ_lu5o4CBrM; Path=/; Domain=kompas.cloud; Max-Age=900"
												},
												{
													"key": "set-cookie",
													"value": "kompas._token_refresh=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkNMZXRZQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzkxNjc3MSwic3ViIjoxfQ.IJhjSVfnYjJbIDVxRoTMIcSFta_FRSiJTZ0YZxJjOSlyRojDoLNh8p4noPECNPI9O51IcYPpIf9KkwcIDh9rN5UV63Qq082r7LrgxMlRjWzXc3Y4vJPRhtujP568j_zV7SF5pMpH9XeOZweyJjp0nbXcslIGycDd8PRHnysKxy9OMok; Path=/; Domain=kompas.cloud; Max-Age=21600"
												},
												{
													"key": "X-Cloud-Trace-Context",
													"value": "16812f2da853d779ffb5c06f498dfde5;o=1"
												},
												{
													"key": "Date",
													"value": "Wed, 16 Jun 2021 07:59:32 GMT"
												},
												{
													"key": "Server",
													"value": "Google Frontend"
												},
												{
													"key": "Content-Length",
													"value": "1132"
												},
												{
													"key": "Expires",
													"value": "Wed, 16 Jun 2021 07:59:32 GMT"
												},
												{
													"key": "Cache-Control",
													"value": "private"
												},
												{
													"key": "Alt-Svc",
													"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
												}
											],
											"cookie": [],
											"body": "{\n    \"accessToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoidGVzdHNkZXQuQ0xldFlAMXNlY21haWwuY29tIiwiaWQiOiI1ZjMzOTBhZi0xNzJlLTQ1NzItODMyOS1hZTU4OGI2NGYwNDYiLCJzY29wZSI6WyJyZWFkLWFydGljbGUiLCJyZWFkLXByb2ZpbGUiXX0sImV4cCI6MTYyMzgzMTI3MSwiaWF0IjoxNjIzODMwMzcxLCJpc3MiOiJodHRwczovL2FjY291bnQua29tcGFzLmlkIn0.T9wynJBKDhPpolYwxTw4ranuHGwSj4RVZOEngHAC-bswUb4exXItipb1-F81KHLA0WFibtGNa0C-InTBMpl_JZXNb9mUvSnD4VU65t9g-0-5nD9bPva7k6J0Dg9RpLSfuu4zMSUykts-6gTQGFCt6OAl0fVLu6bbFT5uJ_lu5o4CBrM\",\n    \"data\": {\n        \"email\": \"testsdet.CLetY@1secmail.com\",\n        \"name\": \"sdet name gLkonuw\",\n        \"lastName\": \"KFfHiLZw\",\n        \"password\": \"@@AsD1223!!PgpqFIamY\",\n        \"google\": \"\",\n        \"facebook\": \"\",\n        \"apple\": {\n            \"email\": \"\",\n            \"token\": \"\"\n        },\n        \"docReferrer\": \"\"\n    },\n    \"docReferrer\": \"\",\n    \"error\": false,\n    \"message\": \"Pengguna telah berhasil didaftarkan.\",\n    \"passwordCheck\": \"Password kuat\",\n    \"refreshToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RzZGV0LkNMZXRZQDFzZWNtYWlsLmNvbSIsImV4cCI6MTYyMzkxNjc3MSwic3ViIjoxfQ.IJhjSVfnYjJbIDVxRoTMIcSFta_FRSiJTZ0YZxJjOSlyRojDoLNh8p4noPECNPI9O51IcYPpIf9KkwcIDh9rN5UV63Qq082r7LrgxMlRjWzXc3Y4vJPRhtujP568j_zV7SF5pMpH9XeOZweyJjp0nbXcslIGycDd8PRHnysKxy9OMok\"\n}"
										}
									]
								},
								{
									"name": "Cancel Registration With Valid Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var myVar = setInterval(delayValidToken, 5000);\r",
													"function delayValidToken(){\r",
													"     clearInterval(myVar);\r",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"User Successfully Delete Account\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    var email = pm.environment.get(\"email\");\r",
													"    pm.expect(jsonData.email).to.eql(email);\r",
													"    pm.expect(jsonData.message).to.eql(\"successfully delete user\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true
										},
										"strictSSL": true,
										"followRedirects": true,
										"disableUrlEncoding": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"token\" : \"{{jwt_token_cancel}}\"\r\n}"
										},
										"url": {
											"raw": "{{GLOBAL_BASEURL}}/cancel-register",
											"host": [
												"{{GLOBAL_BASEURL}}"
											],
											"path": [
												"cancel-register"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Login With Email Deleted",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error Login with Email Deleted\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(401\r",
											"    );\r",
											"    pm.expect(jsonData.success).to.be.false;\r",
											"    pm.expect(jsonData.message).to.eql(\"email & password tidak sesuai\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								},
								"strictSSL": true,
								"followRedirects": true,
								"disableUrlEncoding": false
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/login",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reset Password With Email Deleted",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User get error reset password with Email Deleted\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.message).to.eql(\"email tidak ditemukan\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								},
								"strictSSL": true,
								"followRedirects": true,
								"disableUrlEncoding": false
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\"\r\n}"
								},
								"url": {
									"raw": "{{GLOBAL_BASEURL}}/reset-password",
									"host": [
										"{{GLOBAL_BASEURL}}"
									],
									"path": [
										"reset-password"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}